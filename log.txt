
发消息的时候隐藏clientid、serverid
--clientid需要作为发送方向，serverid被隐藏

将connect改成多连接支持的
--创建了ConnectMgr,并且已经全部换成ConnectMgr

client的login处理
--完成了从loginsvr到gatewaysvr的切换

完成client选角流程，最后到可以在地图中移动即可。
--已完成

断开gate，踢下所有在其他server中的client
--在game这边处理

断开gate的时候，没有去清理center中的serverstatusmgr，导致gate重连的时候，game会重新给center发送serverstatus
--将gate连接到Center了，在断开的时候处理过该消息了

client中的s_Secret应该要改成char类型，确认加密方式后
已修改

gateway那边AddNewClient的时候，需要判断好秘钥
--已经判断

time、random
--已完成

把普通地图和副本地图拆分开
--已拆分

game和gate断开的时候，gate需要断开所有client
--断开了

log_error管理一下
--已处理

头文件的包含需要理一下
--去掉了stdfx，类似的处理一下头文件，尽量不要在头文件用包含其他头文件

***目前测试每秒能认证成功的client数量在10个左右，看一下为什么，是不是网络库这边的限制***
--robot里的run中的continue写成了return，导致每帧只连接一个client

***广播移动消息后，client过一段时间可能会断线，查一下原因***
--可能是ping的问题，之前一直超时，ping可能没收到
--ping超时，配置文件里面ping的时间和超时时间设置太相近了
--上面的return貌似对这个也有影响

CClientSvrMgr::GetClientSvr,优化一下，不使用find
--已修改

CClientAuthMgr这边应该也可以不使用find
--已处理

sql查询日志的控制
--已处理

检查login的超时在哪
--热点还是在那几个认证步骤

新的客户端认证失败
--正确log，踢下线的时候，原有client尝试重新连接，此时秘钥已经改变。

DB这边在大量玩家同时登陆的时候，耗时非常严重，需要看怎么优化优化。
--已完成

广播消息合并一下，game->gate的时候合并一下，在gate这边分发
--已完成

client只需要int32即可，将int64的全部改为int32,并把所有的client查找改为随机访问，server的查找看要不要也改为随机访问
--有的还是需要用int64，可以用int32的已经都处理了

服务器的config看需不需要拆分一下，现在太多了，集中在一起看起来挺乱的
--已拆分

logsvr，namechecksvr
--logsvr已添加，namechecksvr已添加

增加多个gameserver，实现单个gameserver中的地图切换和跨gameserver的地图切换
--ing
--登陆负载v1
--切换地图和切换game服务器待做
--切换地图和换线一起合并制作
--将登陆选角调整到login
player在center的ClientSvrMgr中的id不能使用clientid了,因为一线、二线都有clientid为1的player
这边需要center统一分配，看是找个什么方法比较好，其实就是为了解决center发送消息到client
--已处理

换线的token是由gamegateway填充的，看要不要做到center中去管理分发
--现在换线不用换gate，所以token留在gate即可

换线这一流程要完整测试，每个步骤要清晰合理，不能乱，log要打足，每个失败的地方要做处理
--已处理

调整了game和gate的连接逻辑，game这边的clientid可能需要调整
--不需要，game这边记录的是gate指针

玩家下线数据保存
--已处理

服务器注册的时候，发送服务器名称
--已处理

多个DBserver同时处理请求
--其实主要问题就是connectmgr和servermgr都是多个连接的，看要不要处理一下让mgr可以单连接和多连接共享，避免多余代码

php后台
--暂时先只添加了cpr，为server提供了http访问能力

怪物、NPC
--为地图中添加怪物和NPC，地图这块也需要整理一下
--初步添加了

副本的刷怪
--初步完成

背包
--初步完成

玩家被挤下线的时候，取的数据可能会有新旧问题，需要测试一下。

player这边消息处理调整一下，简化、避免多余的查询操作

为所有服务器添加后台命令
--已完成

最大client的管理，主要是几个内存池的大小需要控制

Sql语句执行后，返回返回是否成功执行，就不需要手动检测"@"

player离线的时候，要把所有引用到的指针清理

服务器启动后的连接顺序、状态同步，在所有服务器启动完成后才允许client连接
服务器的关闭处理（可以待client登录创角这块完成后处理）

client连接消息顺序，不同情况下重连的处理

服务器内的消息发送要优化（清理）一下方式...

加密处理

这里的单例模式的析构函数会在程序退出后调用，但是内存池检测释放是在这之前，所以需要显示的调用一下Destroy，避免内存泄露提示
这边也需要检查所有的Destroy函数

尝试将代码做成跨平台的，以便于使用redis等工具
可以自己写makefile或者使用vs2017生成linux项目

看有没有必要将项目编译生成64位程序，至少64位生成的时候不报错

一机多服这一块，目前做的是多进程方式，也行可以优化一下，本服就支持多服？

整体代码可能需要整理一下，去掉多余的，优化一下结构，让代码更简洁，有的继承并没有使用到某些函数，可以不写成纯虚函数。

玩家的登陆流程，不管出现什么错误，都不能把号给卡着了。比如DB服务器没有启动，玩家尝试登陆失败，然后这边单独启动DB服，玩家再次尝试的时候，需要能够登陆
在线玩家管理可能需要调整一下，不然登陆流程比较长，很多可能出错的地方会把账号卡着了
--这边做了认证状态，在断开loginserver的时候，如果状态为false，则通知center做下线处理，避免center中账号处于认证状态

怪物、NPC的死亡复活的管理可能需要调整一下

组队
--主要写一个框架，做出一个涉及到center的完整client操作

玩家数据保存这边，采用了压缩数据，看有没有更好的别的办法，看要不要使用json保存

DBServer这边看要不要做个缓存

怪物AI
--开了个头

release模式下的调试信息和minidump

DBServer打印log非常耗时，需要默认关闭
