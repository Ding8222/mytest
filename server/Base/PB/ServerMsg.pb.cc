// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMsg.proto

#include "ServerMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace svrData {
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class ServerRegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegister>
      _instance;
} _ServerRegister_default_instance_;
class ServerRegisterRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterRet>
      _instance;
} _ServerRegisterRet_default_instance_;
class ServerLoadInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerLoadInfo>
      _instance;
} _ServerLoadInfo_default_instance_;
class UpdateServerLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateServerLoad>
      _instance;
} _UpdateServerLoad_default_instance_;
class AddPlayerToCenterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddPlayerToCenter>
      _instance;
} _AddPlayerToCenter_default_instance_;
class DelClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelClient>
      _instance;
} _DelClient_default_instance_;
class ClientAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientAccount>
      _instance;
} _ClientAccount_default_instance_;
class LoadPlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadPlayerData>
      _instance;
} _LoadPlayerData_default_instance_;
class ChangeLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLine>
      _instance;
} _ChangeLine_default_instance_;
class ChangeLineRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLineRet>
      _instance;
} _ChangeLineRet_default_instance_;
class KickClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickClient>
      _instance;
} _KickClient_default_instance_;
}  // namespace svrData
namespace protobuf_ServerMsg_2eproto {
void InitDefaultsPingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_Ping_default_instance_;
    new (ptr) ::svrData::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::Ping::InitAsDefaultInstance();
}

void InitDefaultsPing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPingImpl);
}

void InitDefaultsServerRegisterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegister_default_instance_;
    new (ptr) ::svrData::ServerRegister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegister::InitAsDefaultInstance();
}

void InitDefaultsServerRegister() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterImpl);
}

void InitDefaultsServerRegisterRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegisterRet_default_instance_;
    new (ptr) ::svrData::ServerRegisterRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegisterRet::InitAsDefaultInstance();
}

void InitDefaultsServerRegisterRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterRetImpl);
}

void InitDefaultsServerLoadInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ServerMsg_2eproto::InitDefaultsAddPlayerToCenter();
  {
    void* ptr = &::svrData::_ServerLoadInfo_default_instance_;
    new (ptr) ::svrData::ServerLoadInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerLoadInfo::InitAsDefaultInstance();
}

void InitDefaultsServerLoadInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerLoadInfoImpl);
}

void InitDefaultsUpdateServerLoadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_UpdateServerLoad_default_instance_;
    new (ptr) ::svrData::UpdateServerLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::UpdateServerLoad::InitAsDefaultInstance();
}

void InitDefaultsUpdateServerLoad() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateServerLoadImpl);
}

void InitDefaultsAddPlayerToCenterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_AddPlayerToCenter_default_instance_;
    new (ptr) ::svrData::AddPlayerToCenter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::AddPlayerToCenter::InitAsDefaultInstance();
}

void InitDefaultsAddPlayerToCenter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddPlayerToCenterImpl);
}

void InitDefaultsDelClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_DelClient_default_instance_;
    new (ptr) ::svrData::DelClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::DelClient::InitAsDefaultInstance();
}

void InitDefaultsDelClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelClientImpl);
}

void InitDefaultsClientAccountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  {
    void* ptr = &::svrData::_ClientAccount_default_instance_;
    new (ptr) ::svrData::ClientAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ClientAccount::InitAsDefaultInstance();
}

void InitDefaultsClientAccount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientAccountImpl);
}

void InitDefaultsLoadPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_LoadPlayerData_default_instance_;
    new (ptr) ::svrData::LoadPlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::LoadPlayerData::InitAsDefaultInstance();
}

void InitDefaultsLoadPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadPlayerDataImpl);
}

void InitDefaultsChangeLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  {
    void* ptr = &::svrData::_ChangeLine_default_instance_;
    new (ptr) ::svrData::ChangeLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ChangeLine::InitAsDefaultInstance();
}

void InitDefaultsChangeLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeLineImpl);
}

void InitDefaultsChangeLineRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ChangeLineRet_default_instance_;
    new (ptr) ::svrData::ChangeLineRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ChangeLineRet::InitAsDefaultInstance();
}

void InitDefaultsChangeLineRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeLineRetImpl);
}

void InitDefaultsKickClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_KickClient_default_instance_;
    new (ptr) ::svrData::KickClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::KickClient::InitAsDefaultInstance();
}

void InitDefaultsKickClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickClientImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nservertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nconnectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, nretcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, sip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, nport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nlineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nmaxclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nnowclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, sip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, mapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, nclientcountnow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, nclientcountmax_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddPlayerToCenter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddPlayerToCenter, nguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddPlayerToCenter, nclientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddPlayerToCenter, ngateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddPlayerToCenter, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::DelClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::DelClient, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientAccount, ngameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientAccount, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientAccount, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nsex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, njob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, ncreatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nmapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, ny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, nz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, bchangeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLine, nmapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLine, nlineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLine, ngameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLine, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLineRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLineRet, ncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLineRet, nmapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ChangeLineRet, nlineid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::KickClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::svrData::Ping)},
  { 5, -1, sizeof(::svrData::ServerRegister)},
  { 14, -1, sizeof(::svrData::ServerRegisterRet)},
  { 22, -1, sizeof(::svrData::ServerLoadInfo)},
  { 34, -1, sizeof(::svrData::UpdateServerLoad)},
  { 41, -1, sizeof(::svrData::AddPlayerToCenter)},
  { 50, -1, sizeof(::svrData::DelClient)},
  { 56, -1, sizeof(::svrData::ClientAccount)},
  { 65, -1, sizeof(::svrData::LoadPlayerData)},
  { 84, -1, sizeof(::svrData::ChangeLine)},
  { 93, -1, sizeof(::svrData::ChangeLineRet)},
  { 101, -1, sizeof(::svrData::KickClient)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegisterRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerLoadInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_UpdateServerLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_AddPlayerToCenter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_DelClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ClientAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_LoadPlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ChangeLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ChangeLineRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_KickClient_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ServerMsg.proto\022\007svrData\"\006\n\004Ping\"[\n\016Se"
      "rverRegister\022\021\n\tnServerID\030\001 \001(\005\022\023\n\013nServ"
      "erType\030\002 \001(\005\022\022\n\nnConnectID\030\003 \001(\005\022\r\n\005nPor"
      "t\030\004 \001(\005\"\232\001\n\021ServerRegisterRet\022\020\n\010nRetCod"
      "e\030\001 \001(\005\022\013\n\003sIP\030\002 \001(\t\022\r\n\005nPort\030\003 \001(\005\"W\n\002E"
      "C\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\026\n\022EC_SERVE"
      "R_ID_EXIST\020\002\022\036\n\032EC_TO_CONNECT_ID_NOT_EQU"
      "AL\020\003\"\236\001\n\016ServerLoadInfo\022\017\n\007nLineID\030\001 \001(\005"
      "\022\022\n\nnMaxClient\030\002 \001(\005\022\022\n\nnNowClient\030\003 \001(\005"
      "\022\r\n\005nPort\030\004 \001(\005\022\013\n\003sIP\030\005 \001(\t\022\r\n\005mapid\030\006 "
      "\003(\005\022(\n\004info\030\007 \003(\0132\032.svrData.AddPlayerToC"
      "enter\"D\n\020UpdateServerLoad\022\027\n\017nClientCoun"
      "tNow\030\001 \001(\005\022\027\n\017nClientCountMax\030\002 \001(\005\"W\n\021A"
      "ddPlayerToCenter\022\r\n\005nGuid\030\001 \001(\003\022\021\n\tnClie"
      "ntID\030\002 \001(\005\022\017\n\007nGateID\030\003 \001(\005\022\017\n\007Account\030\004"
      " \001(\t\"\034\n\tDelClient\022\017\n\007Account\030\001 \001(\t\"h\n\rCl"
      "ientAccount\022\017\n\007nGameID\030\001 \001(\005\022\017\n\007Account\030"
      "\002 \001(\t\022\016\n\006Secret\030\003 \001(\014\022%\n\004Data\030\004 \001(\0132\027.sv"
      "rData.LoadPlayerData\"\352\001\n\016LoadPlayerData\022"
      "\017\n\007Account\030\001 \001(\t\022\014\n\004Name\030\002 \001(\t\022\r\n\005nGuid\030"
      "\003 \001(\003\022\014\n\004nSex\030\004 \001(\005\022\014\n\004nJob\030\005 \001(\005\022\016\n\006nLe"
      "vel\030\006 \001(\005\022\023\n\013nCreateTime\030\007 \001(\003\022\022\n\nnLogin"
      "Time\030\010 \001(\003\022\016\n\006nMapID\030\t \001(\005\022\n\n\002nX\030\n \001(\002\022\n"
      "\n\002nY\030\013 \001(\002\022\n\n\002nZ\030\014 \001(\002\022\023\n\013bChangeLine\030\r "
      "\001(\010\022\014\n\004Data\030\016 \001(\014\"e\n\nChangeLine\022\016\n\006nMapI"
      "D\030\001 \001(\005\022\017\n\007nLineID\030\002 \001(\005\022\017\n\007nGameID\030\003 \001("
      "\005\022%\n\004Data\030\004 \001(\0132\027.svrData.LoadPlayerData"
      "\"|\n\rChangeLineRet\022\r\n\005nCode\030\001 \001(\005\022\016\n\006nMap"
      "ID\030\002 \001(\005\022\017\n\007nLineID\030\003 \001(\005\";\n\002EC\022\014\n\010EC_OT"
      "HER\020\000\022\013\n\007EC_SUCC\020\001\022\013\n\007EC_FAIL\020\002\022\r\n\tEC_SE"
      "RVER\020\003\"\014\n\nKickClientb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMsg_2eproto
namespace svrData {
const ::google::protobuf::EnumDescriptor* ServerRegisterRet_EC_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[0];
}
bool ServerRegisterRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerRegisterRet_EC ServerRegisterRet::EC_OTHER;
const ServerRegisterRet_EC ServerRegisterRet::EC_SUCC;
const ServerRegisterRet_EC ServerRegisterRet::EC_SERVER_ID_EXIST;
const ServerRegisterRet_EC ServerRegisterRet::EC_TO_CONNECT_ID_NOT_EQUAL;
const ServerRegisterRet_EC ServerRegisterRet::EC_MIN;
const ServerRegisterRet_EC ServerRegisterRet::EC_MAX;
const int ServerRegisterRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChangeLineRet_EC_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[1];
}
bool ChangeLineRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChangeLineRet_EC ChangeLineRet::EC_OTHER;
const ChangeLineRet_EC ChangeLineRet::EC_SUCC;
const ChangeLineRet_EC ChangeLineRet::EC_FAIL;
const ChangeLineRet_EC ChangeLineRet::EC_SERVER;
const ChangeLineRet_EC ChangeLineRet::EC_MIN;
const ChangeLineRet_EC ChangeLineRet::EC_MAX;
const int ChangeLineRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.Ping)
}

void Ping::SharedCtor() {
  _cached_size_ = 0;
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:svrData.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegister::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegister::kNServerIDFieldNumber;
const int ServerRegister::kNServerTypeFieldNumber;
const int ServerRegister::kNConnectIDFieldNumber;
const int ServerRegister::kNPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegister::ServerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegister)
}
ServerRegister::ServerRegister(const ServerRegister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nserverid_, &from.nserverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nport_) -
    reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegister)
}

void ServerRegister::SharedCtor() {
  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  _cached_size_ = 0;
}

ServerRegister::~ServerRegister() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegister)
  SharedDtor();
}

void ServerRegister::SharedDtor() {
}

void ServerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegister::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegister& ServerRegister::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  return *internal_default_instance();
}


void ServerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  _internal_metadata_.Clear();
}

bool ServerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nServerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nservertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nConnectID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconnectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegister)
  return false;
#undef DO_
}

void ServerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nserverid(), output);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nservertype(), output);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nconnectid(), output);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegister)
}

::google::protobuf::uint8* ServerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nserverid(), target);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nservertype(), target);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nconnectid(), target);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegister)
  return target;
}

size_t ServerRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegister)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nserverid());
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nservertype());
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nconnectid());
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegister* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegister)
    MergeFrom(*source);
  }
}

void ServerRegister::MergeFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nserverid() != 0) {
    set_nserverid(from.nserverid());
  }
  if (from.nservertype() != 0) {
    set_nservertype(from.nservertype());
  }
  if (from.nconnectid() != 0) {
    set_nconnectid(from.nconnectid());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
}

void ServerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegister::CopyFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegister::IsInitialized() const {
  return true;
}

void ServerRegister::Swap(ServerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegister::InternalSwap(ServerRegister* other) {
  using std::swap;
  swap(nserverid_, other->nserverid_);
  swap(nservertype_, other->nservertype_);
  swap(nconnectid_, other->nconnectid_);
  swap(nport_, other->nport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegister::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegisterRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterRet::kNRetCodeFieldNumber;
const int ServerRegisterRet::kSIPFieldNumber;
const int ServerRegisterRet::kNPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterRet::ServerRegisterRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegisterRet)
}
ServerRegisterRet::ServerRegisterRet(const ServerRegisterRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&nretcode_, &from.nretcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nport_) -
    reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegisterRet)
}

void ServerRegisterRet::SharedCtor() {
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nretcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  _cached_size_ = 0;
}

ServerRegisterRet::~ServerRegisterRet() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegisterRet)
  SharedDtor();
}

void ServerRegisterRet::SharedDtor() {
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerRegisterRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegisterRet::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegisterRet& ServerRegisterRet::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  return *internal_default_instance();
}


void ServerRegisterRet::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nretcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  _internal_metadata_.Clear();
}

bool ServerRegisterRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegisterRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nRetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ServerRegisterRet.sIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegisterRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegisterRet)
  return false;
#undef DO_
}

void ServerRegisterRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nretcode(), output);
  }

  // string sIP = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerRegisterRet.sIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sip(), output);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegisterRet)
}

::google::protobuf::uint8* ServerRegisterRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nretcode(), target);
  }

  // string sIP = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerRegisterRet.sIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sip(), target);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegisterRet)
  return target;
}

size_t ServerRegisterRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegisterRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sIP = 2;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nretcode());
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegisterRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegisterRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegisterRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegisterRet)
    MergeFrom(*source);
  }
}

void ServerRegisterRet::MergeFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.nretcode() != 0) {
    set_nretcode(from.nretcode());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
}

void ServerRegisterRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterRet::CopyFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterRet::IsInitialized() const {
  return true;
}

void ServerRegisterRet::Swap(ServerRegisterRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterRet::InternalSwap(ServerRegisterRet* other) {
  using std::swap;
  sip_.Swap(&other->sip_);
  swap(nretcode_, other->nretcode_);
  swap(nport_, other->nport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegisterRet::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerLoadInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerLoadInfo::kNLineIDFieldNumber;
const int ServerLoadInfo::kNMaxClientFieldNumber;
const int ServerLoadInfo::kNNowClientFieldNumber;
const int ServerLoadInfo::kNPortFieldNumber;
const int ServerLoadInfo::kSIPFieldNumber;
const int ServerLoadInfo::kMapidFieldNumber;
const int ServerLoadInfo::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLoadInfo::ServerLoadInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerLoadInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerLoadInfo)
}
ServerLoadInfo::ServerLoadInfo(const ServerLoadInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mapid_(from.mapid_),
      info_(from.info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&nlineid_, &from.nlineid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nport_) -
    reinterpret_cast<char*>(&nlineid_)) + sizeof(nport_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerLoadInfo)
}

void ServerLoadInfo::SharedCtor() {
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlineid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nlineid_)) + sizeof(nport_));
  _cached_size_ = 0;
}

ServerLoadInfo::~ServerLoadInfo() {
  // @@protoc_insertion_point(destructor:svrData.ServerLoadInfo)
  SharedDtor();
}

void ServerLoadInfo::SharedDtor() {
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerLoadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLoadInfo::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerLoadInfo& ServerLoadInfo::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerLoadInfo();
  return *internal_default_instance();
}


void ServerLoadInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapid_.Clear();
  info_.Clear();
  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlineid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nlineid_)) + sizeof(nport_));
  _internal_metadata_.Clear();
}

bool ServerLoadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerLoadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nLineID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlineid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nMaxClient = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmaxclient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nNowClient = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nnowclient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIP = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ServerLoadInfo.sIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 mapid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mapid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_mapid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .svrData.AddPlayerToCenter info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerLoadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerLoadInfo)
  return false;
#undef DO_
}

void ServerLoadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nLineID = 1;
  if (this->nlineid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nlineid(), output);
  }

  // int32 nMaxClient = 2;
  if (this->nmaxclient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nmaxclient(), output);
  }

  // int32 nNowClient = 3;
  if (this->nnowclient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nnowclient(), output);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nport(), output);
  }

  // string sIP = 5;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerLoadInfo.sIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sip(), output);
  }

  // repeated int32 mapid = 6;
  if (this->mapid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mapid_cached_byte_size_));
  }
  for (int i = 0, n = this->mapid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->mapid(i), output);
  }

  // repeated .svrData.AddPlayerToCenter info = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->info(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerLoadInfo)
}

::google::protobuf::uint8* ServerLoadInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nLineID = 1;
  if (this->nlineid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nlineid(), target);
  }

  // int32 nMaxClient = 2;
  if (this->nmaxclient() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nmaxclient(), target);
  }

  // int32 nNowClient = 3;
  if (this->nnowclient() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nnowclient(), target);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nport(), target);
  }

  // string sIP = 5;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerLoadInfo.sIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sip(), target);
  }

  // repeated int32 mapid = 6;
  if (this->mapid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mapid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->mapid_, target);
  }

  // repeated .svrData.AddPlayerToCenter info = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerLoadInfo)
  return target;
}

size_t ServerLoadInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerLoadInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 mapid = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->mapid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mapid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .svrData.AddPlayerToCenter info = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->info(static_cast<int>(i)));
    }
  }

  // string sIP = 5;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // int32 nLineID = 1;
  if (this->nlineid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlineid());
  }

  // int32 nMaxClient = 2;
  if (this->nmaxclient() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmaxclient());
  }

  // int32 nNowClient = 3;
  if (this->nnowclient() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nnowclient());
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLoadInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerLoadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLoadInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLoadInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerLoadInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerLoadInfo)
    MergeFrom(*source);
  }
}

void ServerLoadInfo::MergeFrom(const ServerLoadInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerLoadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mapid_.MergeFrom(from.mapid_);
  info_.MergeFrom(from.info_);
  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.nlineid() != 0) {
    set_nlineid(from.nlineid());
  }
  if (from.nmaxclient() != 0) {
    set_nmaxclient(from.nmaxclient());
  }
  if (from.nnowclient() != 0) {
    set_nnowclient(from.nnowclient());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
}

void ServerLoadInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerLoadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLoadInfo::CopyFrom(const ServerLoadInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerLoadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLoadInfo::IsInitialized() const {
  return true;
}

void ServerLoadInfo::Swap(ServerLoadInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLoadInfo::InternalSwap(ServerLoadInfo* other) {
  using std::swap;
  mapid_.InternalSwap(&other->mapid_);
  CastToBase(&info_)->InternalSwap(CastToBase(&other->info_));
  sip_.Swap(&other->sip_);
  swap(nlineid_, other->nlineid_);
  swap(nmaxclient_, other->nmaxclient_);
  swap(nnowclient_, other->nnowclient_);
  swap(nport_, other->nport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLoadInfo::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateServerLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateServerLoad::kNClientCountNowFieldNumber;
const int UpdateServerLoad::kNClientCountMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateServerLoad::UpdateServerLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsUpdateServerLoad();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.UpdateServerLoad)
}
UpdateServerLoad::UpdateServerLoad(const UpdateServerLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nclientcountnow_, &from.nclientcountnow_,
    static_cast<size_t>(reinterpret_cast<char*>(&nclientcountmax_) -
    reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  // @@protoc_insertion_point(copy_constructor:svrData.UpdateServerLoad)
}

void UpdateServerLoad::SharedCtor() {
  ::memset(&nclientcountnow_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nclientcountmax_) -
      reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  _cached_size_ = 0;
}

UpdateServerLoad::~UpdateServerLoad() {
  // @@protoc_insertion_point(destructor:svrData.UpdateServerLoad)
  SharedDtor();
}

void UpdateServerLoad::SharedDtor() {
}

void UpdateServerLoad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateServerLoad::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateServerLoad& UpdateServerLoad::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsUpdateServerLoad();
  return *internal_default_instance();
}


void UpdateServerLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nclientcountnow_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nclientcountmax_) -
      reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  _internal_metadata_.Clear();
}

bool UpdateServerLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.UpdateServerLoad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nClientCountNow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientcountnow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nClientCountMax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientcountmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.UpdateServerLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.UpdateServerLoad)
  return false;
#undef DO_
}

void UpdateServerLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nclientcountnow(), output);
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nclientcountmax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.UpdateServerLoad)
}

::google::protobuf::uint8* UpdateServerLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nclientcountnow(), target);
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nclientcountmax(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.UpdateServerLoad)
  return target;
}

size_t UpdateServerLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.UpdateServerLoad)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientcountnow());
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientcountmax());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateServerLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.UpdateServerLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateServerLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateServerLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.UpdateServerLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.UpdateServerLoad)
    MergeFrom(*source);
  }
}

void UpdateServerLoad::MergeFrom(const UpdateServerLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.UpdateServerLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nclientcountnow() != 0) {
    set_nclientcountnow(from.nclientcountnow());
  }
  if (from.nclientcountmax() != 0) {
    set_nclientcountmax(from.nclientcountmax());
  }
}

void UpdateServerLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.UpdateServerLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerLoad::CopyFrom(const UpdateServerLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.UpdateServerLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerLoad::IsInitialized() const {
  return true;
}

void UpdateServerLoad::Swap(UpdateServerLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateServerLoad::InternalSwap(UpdateServerLoad* other) {
  using std::swap;
  swap(nclientcountnow_, other->nclientcountnow_);
  swap(nclientcountmax_, other->nclientcountmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateServerLoad::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddPlayerToCenter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddPlayerToCenter::kNGuidFieldNumber;
const int AddPlayerToCenter::kNClientIDFieldNumber;
const int AddPlayerToCenter::kNGateIDFieldNumber;
const int AddPlayerToCenter::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddPlayerToCenter::AddPlayerToCenter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsAddPlayerToCenter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.AddPlayerToCenter)
}
AddPlayerToCenter::AddPlayerToCenter(const AddPlayerToCenter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&nguid_, &from.nguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ngateid_) -
    reinterpret_cast<char*>(&nguid_)) + sizeof(ngateid_));
  // @@protoc_insertion_point(copy_constructor:svrData.AddPlayerToCenter)
}

void AddPlayerToCenter::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngateid_) -
      reinterpret_cast<char*>(&nguid_)) + sizeof(ngateid_));
  _cached_size_ = 0;
}

AddPlayerToCenter::~AddPlayerToCenter() {
  // @@protoc_insertion_point(destructor:svrData.AddPlayerToCenter)
  SharedDtor();
}

void AddPlayerToCenter::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddPlayerToCenter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddPlayerToCenter::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddPlayerToCenter& AddPlayerToCenter::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsAddPlayerToCenter();
  return *internal_default_instance();
}


void AddPlayerToCenter::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.AddPlayerToCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngateid_) -
      reinterpret_cast<char*>(&nguid_)) + sizeof(ngateid_));
  _internal_metadata_.Clear();
}

bool AddPlayerToCenter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.AddPlayerToCenter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 nGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nClientID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nGateID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.AddPlayerToCenter.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.AddPlayerToCenter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.AddPlayerToCenter)
  return false;
#undef DO_
}

void AddPlayerToCenter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.AddPlayerToCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nGuid = 1;
  if (this->nguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nguid(), output);
  }

  // int32 nClientID = 2;
  if (this->nclientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nclientid(), output);
  }

  // int32 nGateID = 3;
  if (this->ngateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ngateid(), output);
  }

  // string Account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.AddPlayerToCenter.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.AddPlayerToCenter)
}

::google::protobuf::uint8* AddPlayerToCenter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.AddPlayerToCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nGuid = 1;
  if (this->nguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nguid(), target);
  }

  // int32 nClientID = 2;
  if (this->nclientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nclientid(), target);
  }

  // int32 nGateID = 3;
  if (this->ngateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ngateid(), target);
  }

  // string Account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.AddPlayerToCenter.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.AddPlayerToCenter)
  return target;
}

size_t AddPlayerToCenter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.AddPlayerToCenter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 4;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // int64 nGuid = 1;
  if (this->nguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nguid());
  }

  // int32 nClientID = 2;
  if (this->nclientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientid());
  }

  // int32 nGateID = 3;
  if (this->ngateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ngateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddPlayerToCenter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.AddPlayerToCenter)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPlayerToCenter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddPlayerToCenter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.AddPlayerToCenter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.AddPlayerToCenter)
    MergeFrom(*source);
  }
}

void AddPlayerToCenter::MergeFrom(const AddPlayerToCenter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.AddPlayerToCenter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.nguid() != 0) {
    set_nguid(from.nguid());
  }
  if (from.nclientid() != 0) {
    set_nclientid(from.nclientid());
  }
  if (from.ngateid() != 0) {
    set_ngateid(from.ngateid());
  }
}

void AddPlayerToCenter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.AddPlayerToCenter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPlayerToCenter::CopyFrom(const AddPlayerToCenter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.AddPlayerToCenter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPlayerToCenter::IsInitialized() const {
  return true;
}

void AddPlayerToCenter::Swap(AddPlayerToCenter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddPlayerToCenter::InternalSwap(AddPlayerToCenter* other) {
  using std::swap;
  account_.Swap(&other->account_);
  swap(nguid_, other->nguid_);
  swap(nclientid_, other->nclientid_);
  swap(ngateid_, other->ngateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddPlayerToCenter::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelClient::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelClient::DelClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsDelClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.DelClient)
}
DelClient::DelClient(const DelClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:svrData.DelClient)
}

void DelClient::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelClient::~DelClient() {
  // @@protoc_insertion_point(destructor:svrData.DelClient)
  SharedDtor();
}

void DelClient::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelClient::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelClient& DelClient::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsDelClient();
  return *internal_default_instance();
}


void DelClient::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DelClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.DelClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.DelClient.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.DelClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.DelClient)
  return false;
#undef DO_
}

void DelClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.DelClient.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.DelClient)
}

::google::protobuf::uint8* DelClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.DelClient.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.DelClient)
  return target;
}

size_t DelClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.DelClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.DelClient)
  GOOGLE_DCHECK_NE(&from, this);
  const DelClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.DelClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.DelClient)
    MergeFrom(*source);
  }
}

void DelClient::MergeFrom(const DelClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.DelClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void DelClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.DelClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelClient::CopyFrom(const DelClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.DelClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelClient::IsInitialized() const {
  return true;
}

void DelClient::Swap(DelClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelClient::InternalSwap(DelClient* other) {
  using std::swap;
  account_.Swap(&other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelClient::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientAccount::InitAsDefaultInstance() {
  ::svrData::_ClientAccount_default_instance_._instance.get_mutable()->data_ = const_cast< ::svrData::LoadPlayerData*>(
      ::svrData::LoadPlayerData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientAccount::kNGameIDFieldNumber;
const int ClientAccount::kAccountFieldNumber;
const int ClientAccount::kSecretFieldNumber;
const int ClientAccount::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientAccount::ClientAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsClientAccount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ClientAccount)
}
ClientAccount::ClientAccount(const ClientAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_data()) {
    data_ = new ::svrData::LoadPlayerData(*from.data_);
  } else {
    data_ = NULL;
  }
  ngameid_ = from.ngameid_;
  // @@protoc_insertion_point(copy_constructor:svrData.ClientAccount)
}

void ClientAccount::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngameid_) -
      reinterpret_cast<char*>(&data_)) + sizeof(ngameid_));
  _cached_size_ = 0;
}

ClientAccount::~ClientAccount() {
  // @@protoc_insertion_point(destructor:svrData.ClientAccount)
  SharedDtor();
}

void ClientAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void ClientAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientAccount::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientAccount& ClientAccount::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsClientAccount();
  return *internal_default_instance();
}


void ClientAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ClientAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ngameid_ = 0;
  _internal_metadata_.Clear();
}

bool ClientAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ClientAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nGameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ClientAccount.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Secret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .svrData.LoadPlayerData Data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ClientAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ClientAccount)
  return false;
#undef DO_
}

void ClientAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ClientAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nGameID = 1;
  if (this->ngameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ngameid(), output);
  }

  // string Account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ClientAccount.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // bytes Secret = 3;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->secret(), output);
  }

  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ClientAccount)
}

::google::protobuf::uint8* ClientAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ClientAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nGameID = 1;
  if (this->ngameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ngameid(), target);
  }

  // string Account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ClientAccount.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // bytes Secret = 3;
  if (this->secret().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->secret(), target);
  }

  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ClientAccount)
  return target;
}

size_t ClientAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ClientAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // bytes Secret = 3;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->secret());
  }

  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 nGameID = 1;
  if (this->ngameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ngameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ClientAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ClientAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ClientAccount)
    MergeFrom(*source);
  }
}

void ClientAccount::MergeFrom(const ClientAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ClientAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_data()) {
    mutable_data()->::svrData::LoadPlayerData::MergeFrom(from.data());
  }
  if (from.ngameid() != 0) {
    set_ngameid(from.ngameid());
  }
}

void ClientAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ClientAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientAccount::CopyFrom(const ClientAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ClientAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientAccount::IsInitialized() const {
  return true;
}

void ClientAccount::Swap(ClientAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientAccount::InternalSwap(ClientAccount* other) {
  using std::swap;
  account_.Swap(&other->account_);
  secret_.Swap(&other->secret_);
  swap(data_, other->data_);
  swap(ngameid_, other->ngameid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientAccount::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadPlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadPlayerData::kAccountFieldNumber;
const int LoadPlayerData::kNameFieldNumber;
const int LoadPlayerData::kNGuidFieldNumber;
const int LoadPlayerData::kNSexFieldNumber;
const int LoadPlayerData::kNJobFieldNumber;
const int LoadPlayerData::kNLevelFieldNumber;
const int LoadPlayerData::kNCreateTimeFieldNumber;
const int LoadPlayerData::kNLoginTimeFieldNumber;
const int LoadPlayerData::kNMapIDFieldNumber;
const int LoadPlayerData::kNXFieldNumber;
const int LoadPlayerData::kNYFieldNumber;
const int LoadPlayerData::kNZFieldNumber;
const int LoadPlayerData::kBChangeLineFieldNumber;
const int LoadPlayerData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadPlayerData::LoadPlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.LoadPlayerData)
}
LoadPlayerData::LoadPlayerData(const LoadPlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&nguid_, &from.nguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bchangeline_) -
    reinterpret_cast<char*>(&nguid_)) + sizeof(bchangeline_));
  // @@protoc_insertion_point(copy_constructor:svrData.LoadPlayerData)
}

void LoadPlayerData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bchangeline_) -
      reinterpret_cast<char*>(&nguid_)) + sizeof(bchangeline_));
  _cached_size_ = 0;
}

LoadPlayerData::~LoadPlayerData() {
  // @@protoc_insertion_point(destructor:svrData.LoadPlayerData)
  SharedDtor();
}

void LoadPlayerData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoadPlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadPlayerData::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadPlayerData& LoadPlayerData::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  return *internal_default_instance();
}


void LoadPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bchangeline_) -
      reinterpret_cast<char*>(&nguid_)) + sizeof(bchangeline_));
  _internal_metadata_.Clear();
}

bool LoadPlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.LoadPlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.LoadPlayerData.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.LoadPlayerData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nJob = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &njob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nCreateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ncreatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nLoginTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nMapID = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float nX = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float nY = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ny_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float nZ = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bChangeLine = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bchangeline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.LoadPlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.LoadPlayerData)
  return false;
#undef DO_
}

void LoadPlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int64 nGuid = 3;
  if (this->nguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nguid(), output);
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nsex(), output);
  }

  // int32 nJob = 5;
  if (this->njob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->njob(), output);
  }

  // int32 nLevel = 6;
  if (this->nlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nlevel(), output);
  }

  // int64 nCreateTime = 7;
  if (this->ncreatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->ncreatetime(), output);
  }

  // int64 nLoginTime = 8;
  if (this->nlogintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->nlogintime(), output);
  }

  // int32 nMapID = 9;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->nmapid(), output);
  }

  // float nX = 10;
  if (this->nx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->nx(), output);
  }

  // float nY = 11;
  if (this->ny() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->ny(), output);
  }

  // float nZ = 12;
  if (this->nz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->nz(), output);
  }

  // bool bChangeLine = 13;
  if (this->bchangeline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->bchangeline(), output);
  }

  // bytes Data = 14;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.LoadPlayerData)
}

::google::protobuf::uint8* LoadPlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int64 nGuid = 3;
  if (this->nguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nguid(), target);
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nsex(), target);
  }

  // int32 nJob = 5;
  if (this->njob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->njob(), target);
  }

  // int32 nLevel = 6;
  if (this->nlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nlevel(), target);
  }

  // int64 nCreateTime = 7;
  if (this->ncreatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->ncreatetime(), target);
  }

  // int64 nLoginTime = 8;
  if (this->nlogintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->nlogintime(), target);
  }

  // int32 nMapID = 9;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->nmapid(), target);
  }

  // float nX = 10;
  if (this->nx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->nx(), target);
  }

  // float nY = 11;
  if (this->ny() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->ny(), target);
  }

  // float nZ = 12;
  if (this->nz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->nz(), target);
  }

  // bool bChangeLine = 13;
  if (this->bchangeline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->bchangeline(), target);
  }

  // bytes Data = 14;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.LoadPlayerData)
  return target;
}

size_t LoadPlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.LoadPlayerData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes Data = 14;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 nGuid = 3;
  if (this->nguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nguid());
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsex());
  }

  // int32 nJob = 5;
  if (this->njob() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->njob());
  }

  // int64 nCreateTime = 7;
  if (this->ncreatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ncreatetime());
  }

  // int32 nLevel = 6;
  if (this->nlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlevel());
  }

  // int32 nMapID = 9;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  // int64 nLoginTime = 8;
  if (this->nlogintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nlogintime());
  }

  // float nX = 10;
  if (this->nx() != 0) {
    total_size += 1 + 4;
  }

  // float nY = 11;
  if (this->ny() != 0) {
    total_size += 1 + 4;
  }

  // float nZ = 12;
  if (this->nz() != 0) {
    total_size += 1 + 4;
  }

  // bool bChangeLine = 13;
  if (this->bchangeline() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadPlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.LoadPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadPlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.LoadPlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.LoadPlayerData)
    MergeFrom(*source);
  }
}

void LoadPlayerData::MergeFrom(const LoadPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.LoadPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.nguid() != 0) {
    set_nguid(from.nguid());
  }
  if (from.nsex() != 0) {
    set_nsex(from.nsex());
  }
  if (from.njob() != 0) {
    set_njob(from.njob());
  }
  if (from.ncreatetime() != 0) {
    set_ncreatetime(from.ncreatetime());
  }
  if (from.nlevel() != 0) {
    set_nlevel(from.nlevel());
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
  if (from.nlogintime() != 0) {
    set_nlogintime(from.nlogintime());
  }
  if (from.nx() != 0) {
    set_nx(from.nx());
  }
  if (from.ny() != 0) {
    set_ny(from.ny());
  }
  if (from.nz() != 0) {
    set_nz(from.nz());
  }
  if (from.bchangeline() != 0) {
    set_bchangeline(from.bchangeline());
  }
}

void LoadPlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.LoadPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPlayerData::CopyFrom(const LoadPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.LoadPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPlayerData::IsInitialized() const {
  return true;
}

void LoadPlayerData::Swap(LoadPlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadPlayerData::InternalSwap(LoadPlayerData* other) {
  using std::swap;
  account_.Swap(&other->account_);
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  swap(nguid_, other->nguid_);
  swap(nsex_, other->nsex_);
  swap(njob_, other->njob_);
  swap(ncreatetime_, other->ncreatetime_);
  swap(nlevel_, other->nlevel_);
  swap(nmapid_, other->nmapid_);
  swap(nlogintime_, other->nlogintime_);
  swap(nx_, other->nx_);
  swap(ny_, other->ny_);
  swap(nz_, other->nz_);
  swap(bchangeline_, other->bchangeline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadPlayerData::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLine::InitAsDefaultInstance() {
  ::svrData::_ChangeLine_default_instance_._instance.get_mutable()->data_ = const_cast< ::svrData::LoadPlayerData*>(
      ::svrData::LoadPlayerData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLine::kNMapIDFieldNumber;
const int ChangeLine::kNLineIDFieldNumber;
const int ChangeLine::kNGameIDFieldNumber;
const int ChangeLine::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLine::ChangeLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsChangeLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ChangeLine)
}
ChangeLine::ChangeLine(const ChangeLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::svrData::LoadPlayerData(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&nmapid_, &from.nmapid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ngameid_) -
    reinterpret_cast<char*>(&nmapid_)) + sizeof(ngameid_));
  // @@protoc_insertion_point(copy_constructor:svrData.ChangeLine)
}

void ChangeLine::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngameid_) -
      reinterpret_cast<char*>(&data_)) + sizeof(ngameid_));
  _cached_size_ = 0;
}

ChangeLine::~ChangeLine() {
  // @@protoc_insertion_point(destructor:svrData.ChangeLine)
  SharedDtor();
}

void ChangeLine::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void ChangeLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLine::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLine& ChangeLine::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsChangeLine();
  return *internal_default_instance();
}


void ChangeLine::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ChangeLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&nmapid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngameid_) -
      reinterpret_cast<char*>(&nmapid_)) + sizeof(ngameid_));
  _internal_metadata_.Clear();
}

bool ChangeLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ChangeLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nMapID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nLineID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlineid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nGameID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .svrData.LoadPlayerData Data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ChangeLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ChangeLine)
  return false;
#undef DO_
}

void ChangeLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ChangeLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nmapid(), output);
  }

  // int32 nLineID = 2;
  if (this->nlineid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nlineid(), output);
  }

  // int32 nGameID = 3;
  if (this->ngameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ngameid(), output);
  }

  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ChangeLine)
}

::google::protobuf::uint8* ChangeLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ChangeLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nmapid(), target);
  }

  // int32 nLineID = 2;
  if (this->nlineid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nlineid(), target);
  }

  // int32 nGameID = 3;
  if (this->ngameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ngameid(), target);
  }

  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ChangeLine)
  return target;
}

size_t ChangeLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ChangeLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .svrData.LoadPlayerData Data = 4;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  // int32 nLineID = 2;
  if (this->nlineid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlineid());
  }

  // int32 nGameID = 3;
  if (this->ngameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ngameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ChangeLine)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ChangeLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ChangeLine)
    MergeFrom(*source);
  }
}

void ChangeLine::MergeFrom(const ChangeLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ChangeLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::svrData::LoadPlayerData::MergeFrom(from.data());
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
  if (from.nlineid() != 0) {
    set_nlineid(from.nlineid());
  }
  if (from.ngameid() != 0) {
    set_ngameid(from.ngameid());
  }
}

void ChangeLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ChangeLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLine::CopyFrom(const ChangeLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ChangeLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLine::IsInitialized() const {
  return true;
}

void ChangeLine::Swap(ChangeLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLine::InternalSwap(ChangeLine* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(nmapid_, other->nmapid_);
  swap(nlineid_, other->nlineid_);
  swap(ngameid_, other->ngameid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeLine::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLineRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLineRet::kNCodeFieldNumber;
const int ChangeLineRet::kNMapIDFieldNumber;
const int ChangeLineRet::kNLineIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLineRet::ChangeLineRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsChangeLineRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ChangeLineRet)
}
ChangeLineRet::ChangeLineRet(const ChangeLineRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ncode_, &from.ncode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nlineid_) -
    reinterpret_cast<char*>(&ncode_)) + sizeof(nlineid_));
  // @@protoc_insertion_point(copy_constructor:svrData.ChangeLineRet)
}

void ChangeLineRet::SharedCtor() {
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlineid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nlineid_));
  _cached_size_ = 0;
}

ChangeLineRet::~ChangeLineRet() {
  // @@protoc_insertion_point(destructor:svrData.ChangeLineRet)
  SharedDtor();
}

void ChangeLineRet::SharedDtor() {
}

void ChangeLineRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLineRet::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLineRet& ChangeLineRet::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsChangeLineRet();
  return *internal_default_instance();
}


void ChangeLineRet::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ChangeLineRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlineid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nlineid_));
  _internal_metadata_.Clear();
}

bool ChangeLineRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ChangeLineRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nMapID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nLineID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlineid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ChangeLineRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ChangeLineRet)
  return false;
#undef DO_
}

void ChangeLineRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ChangeLineRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  // int32 nMapID = 2;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nmapid(), output);
  }

  // int32 nLineID = 3;
  if (this->nlineid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nlineid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ChangeLineRet)
}

::google::protobuf::uint8* ChangeLineRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ChangeLineRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  // int32 nMapID = 2;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nmapid(), target);
  }

  // int32 nLineID = 3;
  if (this->nlineid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nlineid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ChangeLineRet)
  return target;
}

size_t ChangeLineRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ChangeLineRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  // int32 nMapID = 2;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  // int32 nLineID = 3;
  if (this->nlineid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlineid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLineRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ChangeLineRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLineRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLineRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ChangeLineRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ChangeLineRet)
    MergeFrom(*source);
  }
}

void ChangeLineRet::MergeFrom(const ChangeLineRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ChangeLineRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
  if (from.nlineid() != 0) {
    set_nlineid(from.nlineid());
  }
}

void ChangeLineRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ChangeLineRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLineRet::CopyFrom(const ChangeLineRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ChangeLineRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLineRet::IsInitialized() const {
  return true;
}

void ChangeLineRet::Swap(ChangeLineRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLineRet::InternalSwap(ChangeLineRet* other) {
  using std::swap;
  swap(ncode_, other->ncode_);
  swap(nmapid_, other->nmapid_);
  swap(nlineid_, other->nlineid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeLineRet::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickClient::KickClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsKickClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.KickClient)
}
KickClient::KickClient(const KickClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.KickClient)
}

void KickClient::SharedCtor() {
  _cached_size_ = 0;
}

KickClient::~KickClient() {
  // @@protoc_insertion_point(destructor:svrData.KickClient)
  SharedDtor();
}

void KickClient::SharedDtor() {
}

void KickClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickClient::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickClient& KickClient::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsKickClient();
  return *internal_default_instance();
}


void KickClient::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.KickClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool KickClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.KickClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.KickClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.KickClient)
  return false;
#undef DO_
}

void KickClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.KickClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.KickClient)
}

::google::protobuf::uint8* KickClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.KickClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.KickClient)
  return target;
}

size_t KickClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.KickClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.KickClient)
  GOOGLE_DCHECK_NE(&from, this);
  const KickClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.KickClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.KickClient)
    MergeFrom(*source);
  }
}

void KickClient::MergeFrom(const KickClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.KickClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KickClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.KickClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickClient::CopyFrom(const KickClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.KickClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickClient::IsInitialized() const {
  return true;
}

void KickClient::Swap(KickClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickClient::InternalSwap(KickClient* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickClient::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace svrData
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::Ping* Arena::Create< ::svrData::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerRegister* Arena::Create< ::svrData::ServerRegister >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerRegister >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerRegisterRet* Arena::Create< ::svrData::ServerRegisterRet >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerRegisterRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerLoadInfo* Arena::Create< ::svrData::ServerLoadInfo >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerLoadInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::UpdateServerLoad* Arena::Create< ::svrData::UpdateServerLoad >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::UpdateServerLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::AddPlayerToCenter* Arena::Create< ::svrData::AddPlayerToCenter >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::AddPlayerToCenter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::DelClient* Arena::Create< ::svrData::DelClient >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::DelClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ClientAccount* Arena::Create< ::svrData::ClientAccount >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ClientAccount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::LoadPlayerData* Arena::Create< ::svrData::LoadPlayerData >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::LoadPlayerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ChangeLine* Arena::Create< ::svrData::ChangeLine >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ChangeLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ChangeLineRet* Arena::Create< ::svrData::ChangeLineRet >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ChangeLineRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::KickClient* Arena::Create< ::svrData::KickClient >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::KickClient >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
