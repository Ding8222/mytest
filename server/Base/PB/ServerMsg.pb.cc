// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMsg.proto

#include "ServerMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace svrData {
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class ServerRegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegister>
      _instance;
} _ServerRegister_default_instance_;
class ServerRegisterRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterRet>
      _instance;
} _ServerRegisterRet_default_instance_;
class ServerLoadInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerLoadInfo>
      _instance;
} _ServerLoadInfo_default_instance_;
class UpdateServerLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateServerLoad>
      _instance;
} _UpdateServerLoad_default_instance_;
class AddNewClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNewClient>
      _instance;
} _AddNewClient_default_instance_;
class DelClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelClient>
      _instance;
} _DelClient_default_instance_;
class ClientTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientToken>
      _instance;
} _ClientToken_default_instance_;
class LoadPlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadPlayerData>
      _instance;
} _LoadPlayerData_default_instance_;
class LoadPlayerDataRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadPlayerDataRet>
      _instance;
} _LoadPlayerDataRet_default_instance_;
class ServerLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerLog>
      _instance;
} _ServerLog_default_instance_;
}  // namespace svrData
namespace protobuf_ServerMsg_2eproto {
void InitDefaultsPingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_Ping_default_instance_;
    new (ptr) ::svrData::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::Ping::InitAsDefaultInstance();
}

void InitDefaultsPing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPingImpl);
}

void InitDefaultsServerRegisterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegister_default_instance_;
    new (ptr) ::svrData::ServerRegister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegister::InitAsDefaultInstance();
}

void InitDefaultsServerRegister() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterImpl);
}

void InitDefaultsServerRegisterRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegisterRet_default_instance_;
    new (ptr) ::svrData::ServerRegisterRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegisterRet::InitAsDefaultInstance();
}

void InitDefaultsServerRegisterRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterRetImpl);
}

void InitDefaultsServerLoadInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerLoadInfo_default_instance_;
    new (ptr) ::svrData::ServerLoadInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerLoadInfo::InitAsDefaultInstance();
}

void InitDefaultsServerLoadInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerLoadInfoImpl);
}

void InitDefaultsUpdateServerLoadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_UpdateServerLoad_default_instance_;
    new (ptr) ::svrData::UpdateServerLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::UpdateServerLoad::InitAsDefaultInstance();
}

void InitDefaultsUpdateServerLoad() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateServerLoadImpl);
}

void InitDefaultsAddNewClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_AddNewClient_default_instance_;
    new (ptr) ::svrData::AddNewClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::AddNewClient::InitAsDefaultInstance();
}

void InitDefaultsAddNewClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddNewClientImpl);
}

void InitDefaultsDelClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_DelClient_default_instance_;
    new (ptr) ::svrData::DelClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::DelClient::InitAsDefaultInstance();
}

void InitDefaultsDelClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelClientImpl);
}

void InitDefaultsClientTokenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ClientToken_default_instance_;
    new (ptr) ::svrData::ClientToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ClientToken::InitAsDefaultInstance();
}

void InitDefaultsClientToken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientTokenImpl);
}

void InitDefaultsLoadPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_LoadPlayerData_default_instance_;
    new (ptr) ::svrData::LoadPlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::LoadPlayerData::InitAsDefaultInstance();
}

void InitDefaultsLoadPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadPlayerDataImpl);
}

void InitDefaultsLoadPlayerDataRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_LoadPlayerDataRet_default_instance_;
    new (ptr) ::svrData::LoadPlayerDataRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::LoadPlayerDataRet::InitAsDefaultInstance();
}

void InitDefaultsLoadPlayerDataRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadPlayerDataRetImpl);
}

void InitDefaultsServerLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerLog_default_instance_;
    new (ptr) ::svrData::ServerLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerLog::InitAsDefaultInstance();
}

void InitDefaultsServerLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerLogImpl);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nservertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nconnectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, nretcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, sip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, nport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nmaxclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nnowclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, sip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLoadInfo, nsubserverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, nclientcountnow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::UpdateServerLoad, nclientcountmax_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddNewClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddNewClient, ngateid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::DelClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::DelClient, nclientid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientToken, setoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ClientToken, ssecret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, job_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, mapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerDataRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::LoadPlayerDataRet, nretcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::svrData::Ping)},
  { 5, -1, sizeof(::svrData::ServerRegister)},
  { 14, -1, sizeof(::svrData::ServerRegisterRet)},
  { 22, -1, sizeof(::svrData::ServerLoadInfo)},
  { 32, -1, sizeof(::svrData::UpdateServerLoad)},
  { 39, -1, sizeof(::svrData::AddNewClient)},
  { 45, -1, sizeof(::svrData::DelClient)},
  { 51, -1, sizeof(::svrData::ClientToken)},
  { 58, -1, sizeof(::svrData::LoadPlayerData)},
  { 77, -1, sizeof(::svrData::LoadPlayerDataRet)},
  { 83, -1, sizeof(::svrData::ServerLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegisterRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerLoadInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_UpdateServerLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_AddNewClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_DelClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ClientToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_LoadPlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_LoadPlayerDataRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ServerMsg.proto\022\007svrData\"\006\n\004Ping\"[\n\016Se"
      "rverRegister\022\021\n\tnServerID\030\001 \001(\005\022\023\n\013nServ"
      "erType\030\002 \001(\005\022\022\n\nnConnectID\030\003 \001(\005\022\r\n\005nPor"
      "t\030\004 \001(\005\"\232\001\n\021ServerRegisterRet\022\020\n\010nRetCod"
      "e\030\001 \001(\005\022\013\n\003sIP\030\002 \001(\t\022\r\n\005nPort\030\003 \001(\005\"W\n\002E"
      "C\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\026\n\022EC_SERVE"
      "R_ID_EXIST\020\002\022\036\n\032EC_TO_CONNECT_ID_NOT_EQU"
      "AL\020\003\"j\n\016ServerLoadInfo\022\022\n\nnMaxClient\030\001 \001"
      "(\005\022\022\n\nnNowClient\030\002 \001(\005\022\r\n\005nPort\030\003 \001(\005\022\013\n"
      "\003sIP\030\004 \001(\t\022\024\n\014nSubServerID\030\005 \001(\005\"D\n\020Upda"
      "teServerLoad\022\027\n\017nClientCountNow\030\001 \001(\005\022\027\n"
      "\017nClientCountMax\030\002 \001(\005\"\037\n\014AddNewClient\022\017"
      "\n\007nGateID\030\001 \001(\005\"\036\n\tDelClient\022\021\n\tnClientI"
      "D\030\001 \001(\005\"/\n\013ClientToken\022\017\n\007sEtoken\030\001 \001(\t\022"
      "\017\n\007sSecret\030\002 \001(\014\"\335\001\n\016LoadPlayerData\022\020\n\010c"
      "lientid\030\001 \001(\005\022\017\n\007account\030\002 \001(\t\022\014\n\004name\030\003"
      " \001(\t\022\014\n\004guid\030\004 \001(\003\022\013\n\003sex\030\005 \001(\005\022\013\n\003job\030\006"
      " \001(\005\022\r\n\005level\030\007 \001(\005\022\022\n\ncreatetime\030\010 \001(\005\022"
      "\021\n\tlogintime\030\t \001(\005\022\r\n\005mapid\030\n \001(\005\022\t\n\001x\030\013"
      " \001(\002\022\t\n\001y\030\014 \001(\002\022\t\n\001z\030\r \001(\002\022\014\n\004data\030\016 \001(\014"
      "\"F\n\021LoadPlayerDataRet\022\020\n\010nRetCode\030\001 \001(\005\""
      "\037\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\"\013\n\tServ"
      "erLogb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 893);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMsg_2eproto
namespace svrData {
const ::google::protobuf::EnumDescriptor* ServerRegisterRet_EC_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[0];
}
bool ServerRegisterRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerRegisterRet_EC ServerRegisterRet::EC_OTHER;
const ServerRegisterRet_EC ServerRegisterRet::EC_SUCC;
const ServerRegisterRet_EC ServerRegisterRet::EC_SERVER_ID_EXIST;
const ServerRegisterRet_EC ServerRegisterRet::EC_TO_CONNECT_ID_NOT_EQUAL;
const ServerRegisterRet_EC ServerRegisterRet::EC_MIN;
const ServerRegisterRet_EC ServerRegisterRet::EC_MAX;
const int ServerRegisterRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LoadPlayerDataRet_EC_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[1];
}
bool LoadPlayerDataRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoadPlayerDataRet_EC LoadPlayerDataRet::EC_OTHER;
const LoadPlayerDataRet_EC LoadPlayerDataRet::EC_SUCC;
const LoadPlayerDataRet_EC LoadPlayerDataRet::EC_MIN;
const LoadPlayerDataRet_EC LoadPlayerDataRet::EC_MAX;
const int LoadPlayerDataRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.Ping)
}

void Ping::SharedCtor() {
  _cached_size_ = 0;
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:svrData.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegister::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegister::kNServerIDFieldNumber;
const int ServerRegister::kNServerTypeFieldNumber;
const int ServerRegister::kNConnectIDFieldNumber;
const int ServerRegister::kNPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegister::ServerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegister)
}
ServerRegister::ServerRegister(const ServerRegister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nserverid_, &from.nserverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nport_) -
    reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegister)
}

void ServerRegister::SharedCtor() {
  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  _cached_size_ = 0;
}

ServerRegister::~ServerRegister() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegister)
  SharedDtor();
}

void ServerRegister::SharedDtor() {
}

void ServerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegister::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegister& ServerRegister::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  return *internal_default_instance();
}


void ServerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nport_));
  _internal_metadata_.Clear();
}

bool ServerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nServerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nservertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nConnectID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconnectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegister)
  return false;
#undef DO_
}

void ServerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nserverid(), output);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nservertype(), output);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nconnectid(), output);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegister)
}

::google::protobuf::uint8* ServerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nserverid(), target);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nservertype(), target);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nconnectid(), target);
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegister)
  return target;
}

size_t ServerRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegister)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nserverid());
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nservertype());
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nconnectid());
  }

  // int32 nPort = 4;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegister* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegister)
    MergeFrom(*source);
  }
}

void ServerRegister::MergeFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nserverid() != 0) {
    set_nserverid(from.nserverid());
  }
  if (from.nservertype() != 0) {
    set_nservertype(from.nservertype());
  }
  if (from.nconnectid() != 0) {
    set_nconnectid(from.nconnectid());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
}

void ServerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegister::CopyFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegister::IsInitialized() const {
  return true;
}

void ServerRegister::Swap(ServerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegister::InternalSwap(ServerRegister* other) {
  using std::swap;
  swap(nserverid_, other->nserverid_);
  swap(nservertype_, other->nservertype_);
  swap(nconnectid_, other->nconnectid_);
  swap(nport_, other->nport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegister::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegisterRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterRet::kNRetCodeFieldNumber;
const int ServerRegisterRet::kSIPFieldNumber;
const int ServerRegisterRet::kNPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterRet::ServerRegisterRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegisterRet)
}
ServerRegisterRet::ServerRegisterRet(const ServerRegisterRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&nretcode_, &from.nretcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nport_) -
    reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegisterRet)
}

void ServerRegisterRet::SharedCtor() {
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nretcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  _cached_size_ = 0;
}

ServerRegisterRet::~ServerRegisterRet() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegisterRet)
  SharedDtor();
}

void ServerRegisterRet::SharedDtor() {
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerRegisterRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegisterRet::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegisterRet& ServerRegisterRet::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  return *internal_default_instance();
}


void ServerRegisterRet::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nretcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nport_) -
      reinterpret_cast<char*>(&nretcode_)) + sizeof(nport_));
  _internal_metadata_.Clear();
}

bool ServerRegisterRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegisterRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nRetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ServerRegisterRet.sIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegisterRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegisterRet)
  return false;
#undef DO_
}

void ServerRegisterRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nretcode(), output);
  }

  // string sIP = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerRegisterRet.sIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sip(), output);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegisterRet)
}

::google::protobuf::uint8* ServerRegisterRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nretcode(), target);
  }

  // string sIP = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerRegisterRet.sIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sip(), target);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegisterRet)
  return target;
}

size_t ServerRegisterRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegisterRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sIP = 2;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nretcode());
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegisterRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegisterRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegisterRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegisterRet)
    MergeFrom(*source);
  }
}

void ServerRegisterRet::MergeFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.nretcode() != 0) {
    set_nretcode(from.nretcode());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
}

void ServerRegisterRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterRet::CopyFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterRet::IsInitialized() const {
  return true;
}

void ServerRegisterRet::Swap(ServerRegisterRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterRet::InternalSwap(ServerRegisterRet* other) {
  using std::swap;
  sip_.Swap(&other->sip_);
  swap(nretcode_, other->nretcode_);
  swap(nport_, other->nport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegisterRet::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerLoadInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerLoadInfo::kNMaxClientFieldNumber;
const int ServerLoadInfo::kNNowClientFieldNumber;
const int ServerLoadInfo::kNPortFieldNumber;
const int ServerLoadInfo::kSIPFieldNumber;
const int ServerLoadInfo::kNSubServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLoadInfo::ServerLoadInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerLoadInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerLoadInfo)
}
ServerLoadInfo::ServerLoadInfo(const ServerLoadInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&nmaxclient_, &from.nmaxclient_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsubserverid_) -
    reinterpret_cast<char*>(&nmaxclient_)) + sizeof(nsubserverid_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerLoadInfo)
}

void ServerLoadInfo::SharedCtor() {
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nmaxclient_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsubserverid_) -
      reinterpret_cast<char*>(&nmaxclient_)) + sizeof(nsubserverid_));
  _cached_size_ = 0;
}

ServerLoadInfo::~ServerLoadInfo() {
  // @@protoc_insertion_point(destructor:svrData.ServerLoadInfo)
  SharedDtor();
}

void ServerLoadInfo::SharedDtor() {
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerLoadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLoadInfo::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerLoadInfo& ServerLoadInfo::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerLoadInfo();
  return *internal_default_instance();
}


void ServerLoadInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nmaxclient_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsubserverid_) -
      reinterpret_cast<char*>(&nmaxclient_)) + sizeof(nsubserverid_));
  _internal_metadata_.Clear();
}

bool ServerLoadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerLoadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nMaxClient = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmaxclient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nNowClient = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nnowclient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIP = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ServerLoadInfo.sIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSubServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsubserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerLoadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerLoadInfo)
  return false;
#undef DO_
}

void ServerLoadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMaxClient = 1;
  if (this->nmaxclient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nmaxclient(), output);
  }

  // int32 nNowClient = 2;
  if (this->nnowclient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nnowclient(), output);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nport(), output);
  }

  // string sIP = 4;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerLoadInfo.sIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sip(), output);
  }

  // int32 nSubServerID = 5;
  if (this->nsubserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nsubserverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerLoadInfo)
}

::google::protobuf::uint8* ServerLoadInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerLoadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMaxClient = 1;
  if (this->nmaxclient() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nmaxclient(), target);
  }

  // int32 nNowClient = 2;
  if (this->nnowclient() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nnowclient(), target);
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nport(), target);
  }

  // string sIP = 4;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ServerLoadInfo.sIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sip(), target);
  }

  // int32 nSubServerID = 5;
  if (this->nsubserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nsubserverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerLoadInfo)
  return target;
}

size_t ServerLoadInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerLoadInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sIP = 4;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // int32 nMaxClient = 1;
  if (this->nmaxclient() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmaxclient());
  }

  // int32 nNowClient = 2;
  if (this->nnowclient() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nnowclient());
  }

  // int32 nPort = 3;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  // int32 nSubServerID = 5;
  if (this->nsubserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsubserverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLoadInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerLoadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLoadInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLoadInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerLoadInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerLoadInfo)
    MergeFrom(*source);
  }
}

void ServerLoadInfo::MergeFrom(const ServerLoadInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerLoadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.nmaxclient() != 0) {
    set_nmaxclient(from.nmaxclient());
  }
  if (from.nnowclient() != 0) {
    set_nnowclient(from.nnowclient());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
  if (from.nsubserverid() != 0) {
    set_nsubserverid(from.nsubserverid());
  }
}

void ServerLoadInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerLoadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLoadInfo::CopyFrom(const ServerLoadInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerLoadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLoadInfo::IsInitialized() const {
  return true;
}

void ServerLoadInfo::Swap(ServerLoadInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLoadInfo::InternalSwap(ServerLoadInfo* other) {
  using std::swap;
  sip_.Swap(&other->sip_);
  swap(nmaxclient_, other->nmaxclient_);
  swap(nnowclient_, other->nnowclient_);
  swap(nport_, other->nport_);
  swap(nsubserverid_, other->nsubserverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLoadInfo::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateServerLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateServerLoad::kNClientCountNowFieldNumber;
const int UpdateServerLoad::kNClientCountMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateServerLoad::UpdateServerLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsUpdateServerLoad();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.UpdateServerLoad)
}
UpdateServerLoad::UpdateServerLoad(const UpdateServerLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nclientcountnow_, &from.nclientcountnow_,
    static_cast<size_t>(reinterpret_cast<char*>(&nclientcountmax_) -
    reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  // @@protoc_insertion_point(copy_constructor:svrData.UpdateServerLoad)
}

void UpdateServerLoad::SharedCtor() {
  ::memset(&nclientcountnow_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nclientcountmax_) -
      reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  _cached_size_ = 0;
}

UpdateServerLoad::~UpdateServerLoad() {
  // @@protoc_insertion_point(destructor:svrData.UpdateServerLoad)
  SharedDtor();
}

void UpdateServerLoad::SharedDtor() {
}

void UpdateServerLoad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateServerLoad::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateServerLoad& UpdateServerLoad::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsUpdateServerLoad();
  return *internal_default_instance();
}


void UpdateServerLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nclientcountnow_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nclientcountmax_) -
      reinterpret_cast<char*>(&nclientcountnow_)) + sizeof(nclientcountmax_));
  _internal_metadata_.Clear();
}

bool UpdateServerLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.UpdateServerLoad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nClientCountNow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientcountnow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nClientCountMax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientcountmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.UpdateServerLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.UpdateServerLoad)
  return false;
#undef DO_
}

void UpdateServerLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nclientcountnow(), output);
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nclientcountmax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.UpdateServerLoad)
}

::google::protobuf::uint8* UpdateServerLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.UpdateServerLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nclientcountnow(), target);
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nclientcountmax(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.UpdateServerLoad)
  return target;
}

size_t UpdateServerLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.UpdateServerLoad)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nClientCountNow = 1;
  if (this->nclientcountnow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientcountnow());
  }

  // int32 nClientCountMax = 2;
  if (this->nclientcountmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientcountmax());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateServerLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.UpdateServerLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateServerLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateServerLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.UpdateServerLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.UpdateServerLoad)
    MergeFrom(*source);
  }
}

void UpdateServerLoad::MergeFrom(const UpdateServerLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.UpdateServerLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nclientcountnow() != 0) {
    set_nclientcountnow(from.nclientcountnow());
  }
  if (from.nclientcountmax() != 0) {
    set_nclientcountmax(from.nclientcountmax());
  }
}

void UpdateServerLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.UpdateServerLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerLoad::CopyFrom(const UpdateServerLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.UpdateServerLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerLoad::IsInitialized() const {
  return true;
}

void UpdateServerLoad::Swap(UpdateServerLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateServerLoad::InternalSwap(UpdateServerLoad* other) {
  using std::swap;
  swap(nclientcountnow_, other->nclientcountnow_);
  swap(nclientcountmax_, other->nclientcountmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateServerLoad::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNewClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNewClient::kNGateIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNewClient::AddNewClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsAddNewClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.AddNewClient)
}
AddNewClient::AddNewClient(const AddNewClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ngateid_ = from.ngateid_;
  // @@protoc_insertion_point(copy_constructor:svrData.AddNewClient)
}

void AddNewClient::SharedCtor() {
  ngateid_ = 0;
  _cached_size_ = 0;
}

AddNewClient::~AddNewClient() {
  // @@protoc_insertion_point(destructor:svrData.AddNewClient)
  SharedDtor();
}

void AddNewClient::SharedDtor() {
}

void AddNewClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNewClient::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNewClient& AddNewClient::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsAddNewClient();
  return *internal_default_instance();
}


void AddNewClient::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ngateid_ = 0;
  _internal_metadata_.Clear();
}

bool AddNewClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.AddNewClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nGateID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.AddNewClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.AddNewClient)
  return false;
#undef DO_
}

void AddNewClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nGateID = 1;
  if (this->ngateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ngateid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.AddNewClient)
}

::google::protobuf::uint8* AddNewClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nGateID = 1;
  if (this->ngateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ngateid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.AddNewClient)
  return target;
}

size_t AddNewClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.AddNewClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nGateID = 1;
  if (this->ngateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ngateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNewClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.AddNewClient)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNewClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.AddNewClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.AddNewClient)
    MergeFrom(*source);
  }
}

void AddNewClient::MergeFrom(const AddNewClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.AddNewClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ngateid() != 0) {
    set_ngateid(from.ngateid());
  }
}

void AddNewClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.AddNewClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewClient::CopyFrom(const AddNewClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.AddNewClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewClient::IsInitialized() const {
  return true;
}

void AddNewClient::Swap(AddNewClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNewClient::InternalSwap(AddNewClient* other) {
  using std::swap;
  swap(ngateid_, other->ngateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNewClient::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelClient::kNClientIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelClient::DelClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsDelClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.DelClient)
}
DelClient::DelClient(const DelClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nclientid_ = from.nclientid_;
  // @@protoc_insertion_point(copy_constructor:svrData.DelClient)
}

void DelClient::SharedCtor() {
  nclientid_ = 0;
  _cached_size_ = 0;
}

DelClient::~DelClient() {
  // @@protoc_insertion_point(destructor:svrData.DelClient)
  SharedDtor();
}

void DelClient::SharedDtor() {
}

void DelClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelClient::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelClient& DelClient::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsDelClient();
  return *internal_default_instance();
}


void DelClient::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nclientid_ = 0;
  _internal_metadata_.Clear();
}

bool DelClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.DelClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nClientID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nclientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.DelClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.DelClient)
  return false;
#undef DO_
}

void DelClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientID = 1;
  if (this->nclientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nclientid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.DelClient)
}

::google::protobuf::uint8* DelClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.DelClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nClientID = 1;
  if (this->nclientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nclientid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.DelClient)
  return target;
}

size_t DelClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.DelClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nClientID = 1;
  if (this->nclientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nclientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.DelClient)
  GOOGLE_DCHECK_NE(&from, this);
  const DelClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.DelClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.DelClient)
    MergeFrom(*source);
  }
}

void DelClient::MergeFrom(const DelClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.DelClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nclientid() != 0) {
    set_nclientid(from.nclientid());
  }
}

void DelClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.DelClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelClient::CopyFrom(const DelClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.DelClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelClient::IsInitialized() const {
  return true;
}

void DelClient::Swap(DelClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelClient::InternalSwap(DelClient* other) {
  using std::swap;
  swap(nclientid_, other->nclientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelClient::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientToken::kSEtokenFieldNumber;
const int ClientToken::kSSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientToken::ClientToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsClientToken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ClientToken)
}
ClientToken::ClientToken(const ClientToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.setoken().size() > 0) {
    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ssecret().size() > 0) {
    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
  // @@protoc_insertion_point(copy_constructor:svrData.ClientToken)
}

void ClientToken::SharedCtor() {
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientToken::~ClientToken() {
  // @@protoc_insertion_point(destructor:svrData.ClientToken)
  SharedDtor();
}

void ClientToken::SharedDtor() {
  setoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientToken::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientToken& ClientToken::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsClientToken();
  return *internal_default_instance();
}


void ClientToken::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ClientToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ClientToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sEtoken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_setoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->setoken().data(), static_cast<int>(this->setoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.ClientToken.sEtoken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sSecret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ClientToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ClientToken)
  return false;
#undef DO_
}

void ClientToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ClientToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ClientToken.sEtoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->setoken(), output);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ssecret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ClientToken)
}

::google::protobuf::uint8* ClientToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ClientToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.ClientToken.sEtoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->setoken(), target);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ssecret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ClientToken)
  return target;
}

size_t ClientToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ClientToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->setoken());
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ssecret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ClientToken)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ClientToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ClientToken)
    MergeFrom(*source);
  }
}

void ClientToken::MergeFrom(const ClientToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ClientToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setoken().size() > 0) {

    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  if (from.ssecret().size() > 0) {

    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
}

void ClientToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ClientToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientToken::CopyFrom(const ClientToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ClientToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientToken::IsInitialized() const {
  return true;
}

void ClientToken::Swap(ClientToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientToken::InternalSwap(ClientToken* other) {
  using std::swap;
  setoken_.Swap(&other->setoken_);
  ssecret_.Swap(&other->ssecret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientToken::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadPlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadPlayerData::kClientidFieldNumber;
const int LoadPlayerData::kAccountFieldNumber;
const int LoadPlayerData::kNameFieldNumber;
const int LoadPlayerData::kGuidFieldNumber;
const int LoadPlayerData::kSexFieldNumber;
const int LoadPlayerData::kJobFieldNumber;
const int LoadPlayerData::kLevelFieldNumber;
const int LoadPlayerData::kCreatetimeFieldNumber;
const int LoadPlayerData::kLogintimeFieldNumber;
const int LoadPlayerData::kMapidFieldNumber;
const int LoadPlayerData::kXFieldNumber;
const int LoadPlayerData::kYFieldNumber;
const int LoadPlayerData::kZFieldNumber;
const int LoadPlayerData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadPlayerData::LoadPlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.LoadPlayerData)
}
LoadPlayerData::LoadPlayerData(const LoadPlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:svrData.LoadPlayerData)
}

void LoadPlayerData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(z_));
  _cached_size_ = 0;
}

LoadPlayerData::~LoadPlayerData() {
  // @@protoc_insertion_point(destructor:svrData.LoadPlayerData)
  SharedDtor();
}

void LoadPlayerData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoadPlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadPlayerData::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadPlayerData& LoadPlayerData::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerData();
  return *internal_default_instance();
}


void LoadPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool LoadPlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.LoadPlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 clientid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.LoadPlayerData.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svrData.LoadPlayerData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 job = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 createtime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 logintime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mapid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.LoadPlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.LoadPlayerData)
  return false;
#undef DO_
}

void LoadPlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clientid = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientid(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->guid(), output);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }

  // int32 job = 6;
  if (this->job() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->job(), output);
  }

  // int32 level = 7;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->level(), output);
  }

  // int32 createtime = 8;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->createtime(), output);
  }

  // int32 logintime = 9;
  if (this->logintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->logintime(), output);
  }

  // int32 mapid = 10;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->mapid(), output);
  }

  // float x = 11;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->x(), output);
  }

  // float y = 12;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->y(), output);
  }

  // float z = 13;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->z(), output);
  }

  // bytes data = 14;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.LoadPlayerData)
}

::google::protobuf::uint8* LoadPlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.LoadPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clientid = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientid(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svrData.LoadPlayerData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->guid(), target);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }

  // int32 job = 6;
  if (this->job() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->job(), target);
  }

  // int32 level = 7;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->level(), target);
  }

  // int32 createtime = 8;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->createtime(), target);
  }

  // int32 logintime = 9;
  if (this->logintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->logintime(), target);
  }

  // int32 mapid = 10;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->mapid(), target);
  }

  // float x = 11;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->x(), target);
  }

  // float y = 12;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->y(), target);
  }

  // float z = 13;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->z(), target);
  }

  // bytes data = 14;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.LoadPlayerData)
  return target;
}

size_t LoadPlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.LoadPlayerData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 14;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 clientid = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 job = 6;
  if (this->job() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->job());
  }

  // int32 level = 7;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 createtime = 8;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->createtime());
  }

  // int32 logintime = 9;
  if (this->logintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logintime());
  }

  // int32 mapid = 10;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mapid());
  }

  // float x = 11;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 12;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 13;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadPlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.LoadPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadPlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.LoadPlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.LoadPlayerData)
    MergeFrom(*source);
  }
}

void LoadPlayerData::MergeFrom(const LoadPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.LoadPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.job() != 0) {
    set_job(from.job());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.logintime() != 0) {
    set_logintime(from.logintime());
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void LoadPlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.LoadPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPlayerData::CopyFrom(const LoadPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.LoadPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPlayerData::IsInitialized() const {
  return true;
}

void LoadPlayerData::Swap(LoadPlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadPlayerData::InternalSwap(LoadPlayerData* other) {
  using std::swap;
  account_.Swap(&other->account_);
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  swap(clientid_, other->clientid_);
  swap(sex_, other->sex_);
  swap(guid_, other->guid_);
  swap(job_, other->job_);
  swap(level_, other->level_);
  swap(createtime_, other->createtime_);
  swap(logintime_, other->logintime_);
  swap(mapid_, other->mapid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadPlayerData::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadPlayerDataRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadPlayerDataRet::kNRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadPlayerDataRet::LoadPlayerDataRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerDataRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.LoadPlayerDataRet)
}
LoadPlayerDataRet::LoadPlayerDataRet(const LoadPlayerDataRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nretcode_ = from.nretcode_;
  // @@protoc_insertion_point(copy_constructor:svrData.LoadPlayerDataRet)
}

void LoadPlayerDataRet::SharedCtor() {
  nretcode_ = 0;
  _cached_size_ = 0;
}

LoadPlayerDataRet::~LoadPlayerDataRet() {
  // @@protoc_insertion_point(destructor:svrData.LoadPlayerDataRet)
  SharedDtor();
}

void LoadPlayerDataRet::SharedDtor() {
}

void LoadPlayerDataRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadPlayerDataRet::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadPlayerDataRet& LoadPlayerDataRet::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsLoadPlayerDataRet();
  return *internal_default_instance();
}


void LoadPlayerDataRet::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.LoadPlayerDataRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nretcode_ = 0;
  _internal_metadata_.Clear();
}

bool LoadPlayerDataRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.LoadPlayerDataRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nRetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.LoadPlayerDataRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.LoadPlayerDataRet)
  return false;
#undef DO_
}

void LoadPlayerDataRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.LoadPlayerDataRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nretcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.LoadPlayerDataRet)
}

::google::protobuf::uint8* LoadPlayerDataRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.LoadPlayerDataRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nretcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.LoadPlayerDataRet)
  return target;
}

size_t LoadPlayerDataRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.LoadPlayerDataRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nretcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadPlayerDataRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.LoadPlayerDataRet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPlayerDataRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadPlayerDataRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.LoadPlayerDataRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.LoadPlayerDataRet)
    MergeFrom(*source);
  }
}

void LoadPlayerDataRet::MergeFrom(const LoadPlayerDataRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.LoadPlayerDataRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nretcode() != 0) {
    set_nretcode(from.nretcode());
  }
}

void LoadPlayerDataRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.LoadPlayerDataRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPlayerDataRet::CopyFrom(const LoadPlayerDataRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.LoadPlayerDataRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPlayerDataRet::IsInitialized() const {
  return true;
}

void LoadPlayerDataRet::Swap(LoadPlayerDataRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadPlayerDataRet::InternalSwap(LoadPlayerDataRet* other) {
  using std::swap;
  swap(nretcode_, other->nretcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadPlayerDataRet::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLog::ServerLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerLog)
}
ServerLog::ServerLog(const ServerLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.ServerLog)
}

void ServerLog::SharedCtor() {
  _cached_size_ = 0;
}

ServerLog::~ServerLog() {
  // @@protoc_insertion_point(destructor:svrData.ServerLog)
  SharedDtor();
}

void ServerLog::SharedDtor() {
}

void ServerLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLog::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerLog& ServerLog::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerLog();
  return *internal_default_instance();
}


void ServerLog::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ServerLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerLog)
  return false;
#undef DO_
}

void ServerLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerLog)
}

::google::protobuf::uint8* ServerLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerLog)
  return target;
}

size_t ServerLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerLog)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerLog)
    MergeFrom(*source);
  }
}

void ServerLog::MergeFrom(const ServerLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLog::CopyFrom(const ServerLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLog::IsInitialized() const {
  return true;
}

void ServerLog::Swap(ServerLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLog::InternalSwap(ServerLog* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLog::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace svrData
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::Ping* Arena::Create< ::svrData::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerRegister* Arena::Create< ::svrData::ServerRegister >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerRegister >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerRegisterRet* Arena::Create< ::svrData::ServerRegisterRet >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerRegisterRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerLoadInfo* Arena::Create< ::svrData::ServerLoadInfo >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerLoadInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::UpdateServerLoad* Arena::Create< ::svrData::UpdateServerLoad >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::UpdateServerLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::AddNewClient* Arena::Create< ::svrData::AddNewClient >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::AddNewClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::DelClient* Arena::Create< ::svrData::DelClient >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::DelClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ClientToken* Arena::Create< ::svrData::ClientToken >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ClientToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::LoadPlayerData* Arena::Create< ::svrData::LoadPlayerData >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::LoadPlayerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::LoadPlayerDataRet* Arena::Create< ::svrData::LoadPlayerDataRet >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::LoadPlayerDataRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::svrData::ServerLog* Arena::Create< ::svrData::ServerLog >(Arena* arena) {
  return Arena::CreateInternal< ::svrData::ServerLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
