// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMsg.proto

#include "ClientMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace netData {
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class LoadPlayerDataFinishDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadPlayerDataFinish>
      _instance;
} _LoadPlayerDataFinish_default_instance_;
class PlayerMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerMove>
      _instance;
} _PlayerMove_default_instance_;
class PlayerMoveRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerMoveRet>
      _instance;
} _PlayerMoveRet_default_instance_;
class ChangeMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeMap>
      _instance;
} _ChangeMap_default_instance_;
class ChangeMapRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeMapRet>
      _instance;
} _ChangeMapRet_default_instance_;
class UpdataObjInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdataObjInfo>
      _instance;
} _UpdataObjInfo_default_instance_;
class DelObjFromViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelObjFromView>
      _instance;
} _DelObjFromView_default_instance_;
}  // namespace netData
namespace protobuf_ClientMsg_2eproto {
void InitDefaultsPingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_Ping_default_instance_;
    new (ptr) ::netData::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::Ping::InitAsDefaultInstance();
}

void InitDefaultsPing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPingImpl);
}

void InitDefaultsLoadPlayerDataFinishImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_LoadPlayerDataFinish_default_instance_;
    new (ptr) ::netData::LoadPlayerDataFinish();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::LoadPlayerDataFinish::InitAsDefaultInstance();
}

void InitDefaultsLoadPlayerDataFinish() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadPlayerDataFinishImpl);
}

void InitDefaultsPlayerMoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_PlayerMove_default_instance_;
    new (ptr) ::netData::PlayerMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::PlayerMove::InitAsDefaultInstance();
}

void InitDefaultsPlayerMove() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerMoveImpl);
}

void InitDefaultsPlayerMoveRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_PlayerMoveRet_default_instance_;
    new (ptr) ::netData::PlayerMoveRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::PlayerMoveRet::InitAsDefaultInstance();
}

void InitDefaultsPlayerMoveRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerMoveRetImpl);
}

void InitDefaultsChangeMapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_ChangeMap_default_instance_;
    new (ptr) ::netData::ChangeMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::ChangeMap::InitAsDefaultInstance();
}

void InitDefaultsChangeMap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeMapImpl);
}

void InitDefaultsChangeMapRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_ChangeMapRet_default_instance_;
    new (ptr) ::netData::ChangeMapRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::ChangeMapRet::InitAsDefaultInstance();
}

void InitDefaultsChangeMapRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeMapRetImpl);
}

void InitDefaultsUpdataObjInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_UpdataObjInfo_default_instance_;
    new (ptr) ::netData::UpdataObjInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::UpdataObjInfo::InitAsDefaultInstance();
}

void InitDefaultsUpdataObjInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdataObjInfoImpl);
}

void InitDefaultsDelObjFromViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_DelObjFromView_default_instance_;
    new (ptr) ::netData::DelObjFromView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::DelObjFromView::InitAsDefaultInstance();
}

void InitDefaultsDelObjFromView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelObjFromViewImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::LoadPlayerDataFinish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::LoadPlayerDataFinish, ncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::LoadPlayerDataFinish, ntempid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMove, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMove, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMove, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, ntempid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerMoveRet, ncode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMap, nmapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMap, setoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMap, ssecret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, ncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, bchangeip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, nserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, sip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, nport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChangeMapRet, nmapid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, ntempid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::UpdataObjInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::DelObjFromView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::DelObjFromView, ntempid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::netData::Ping)},
  { 5, -1, sizeof(::netData::LoadPlayerDataFinish)},
  { 12, -1, sizeof(::netData::PlayerMove)},
  { 20, -1, sizeof(::netData::PlayerMoveRet)},
  { 30, -1, sizeof(::netData::ChangeMap)},
  { 38, -1, sizeof(::netData::ChangeMapRet)},
  { 49, -1, sizeof(::netData::UpdataObjInfo)},
  { 59, -1, sizeof(::netData::DelObjFromView)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_LoadPlayerDataFinish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_PlayerMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_PlayerMoveRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_ChangeMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_ChangeMapRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_UpdataObjInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_DelObjFromView_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ClientMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ClientMsg.proto\022\007netData\"\006\n\004Ping\"d\n\024Lo"
      "adPlayerDataFinish\022\r\n\005nCode\030\001 \001(\005\022\017\n\007nTe"
      "mpID\030\002 \001(\r\",\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUC"
      "C\020\001\022\013\n\007EC_FAIL\020\002\"-\n\nPlayerMove\022\t\n\001x\030\001 \001("
      "\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"P\n\rPlayerMoveRet"
      "\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\017\n\007nTe"
      "mpID\030\004 \001(\r\022\r\n\005nCode\030\005 \001(\005\"=\n\tChangeMap\022\016"
      "\n\006nMapID\030\001 \001(\005\022\017\n\007sEtoken\030\002 \001(\t\022\017\n\007sSecr"
      "et\030\003 \001(\014\"\330\001\n\014ChangeMapRet\022\r\n\005nCode\030\001 \001(\005"
      "\022\021\n\tbChangeIP\030\002 \001(\010\022\021\n\tnServerID\030\003 \001(\005\022\013"
      "\n\003sIP\030\004 \001(\t\022\r\n\005nPort\030\005 \001(\005\022\016\n\006nMapID\030\006 \001"
      "(\005\"g\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\013\n\007E"
      "C_FAIL\020\002\022\013\n\007EC_LINE\020\004\022\n\n\006EC_MAP\020\005\022\017\n\013EC_"
      "LEAVEMAP\020\006\022\017\n\013EC_PACKDATA\020\007\"O\n\rUpdataObj"
      "Info\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\017\n"
      "\007nTempID\030\004 \001(\r\022\014\n\004Name\030\005 \001(\t\"!\n\016DelObjFr"
      "omView\022\017\n\007nTempID\030\001 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 671);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ClientMsg_2eproto
namespace netData {
const ::google::protobuf::EnumDescriptor* LoadPlayerDataFinish_EC_descriptor() {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientMsg_2eproto::file_level_enum_descriptors[0];
}
bool LoadPlayerDataFinish_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoadPlayerDataFinish_EC LoadPlayerDataFinish::EC_OTHER;
const LoadPlayerDataFinish_EC LoadPlayerDataFinish::EC_SUCC;
const LoadPlayerDataFinish_EC LoadPlayerDataFinish::EC_FAIL;
const LoadPlayerDataFinish_EC LoadPlayerDataFinish::EC_MIN;
const LoadPlayerDataFinish_EC LoadPlayerDataFinish::EC_MAX;
const int LoadPlayerDataFinish::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChangeMapRet_EC_descriptor() {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientMsg_2eproto::file_level_enum_descriptors[1];
}
bool ChangeMapRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChangeMapRet_EC ChangeMapRet::EC_OTHER;
const ChangeMapRet_EC ChangeMapRet::EC_SUCC;
const ChangeMapRet_EC ChangeMapRet::EC_FAIL;
const ChangeMapRet_EC ChangeMapRet::EC_LINE;
const ChangeMapRet_EC ChangeMapRet::EC_MAP;
const ChangeMapRet_EC ChangeMapRet::EC_LEAVEMAP;
const ChangeMapRet_EC ChangeMapRet::EC_PACKDATA;
const ChangeMapRet_EC ChangeMapRet::EC_MIN;
const ChangeMapRet_EC ChangeMapRet::EC_MAX;
const int ChangeMapRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsPing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:netData.Ping)
}

void Ping::SharedCtor() {
  _cached_size_ = 0;
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:netData.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsPing();
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:netData.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadPlayerDataFinish::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadPlayerDataFinish::kNCodeFieldNumber;
const int LoadPlayerDataFinish::kNTempIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadPlayerDataFinish::LoadPlayerDataFinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsLoadPlayerDataFinish();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.LoadPlayerDataFinish)
}
LoadPlayerDataFinish::LoadPlayerDataFinish(const LoadPlayerDataFinish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ncode_, &from.ncode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ntempid_) -
    reinterpret_cast<char*>(&ncode_)) + sizeof(ntempid_));
  // @@protoc_insertion_point(copy_constructor:netData.LoadPlayerDataFinish)
}

void LoadPlayerDataFinish::SharedCtor() {
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntempid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(ntempid_));
  _cached_size_ = 0;
}

LoadPlayerDataFinish::~LoadPlayerDataFinish() {
  // @@protoc_insertion_point(destructor:netData.LoadPlayerDataFinish)
  SharedDtor();
}

void LoadPlayerDataFinish::SharedDtor() {
}

void LoadPlayerDataFinish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadPlayerDataFinish::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadPlayerDataFinish& LoadPlayerDataFinish::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsLoadPlayerDataFinish();
  return *internal_default_instance();
}


void LoadPlayerDataFinish::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.LoadPlayerDataFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntempid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(ntempid_));
  _internal_metadata_.Clear();
}

bool LoadPlayerDataFinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.LoadPlayerDataFinish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTempID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.LoadPlayerDataFinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.LoadPlayerDataFinish)
  return false;
#undef DO_
}

void LoadPlayerDataFinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.LoadPlayerDataFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  // uint32 nTempID = 2;
  if (this->ntempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntempid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.LoadPlayerDataFinish)
}

::google::protobuf::uint8* LoadPlayerDataFinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.LoadPlayerDataFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  // uint32 nTempID = 2;
  if (this->ntempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntempid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.LoadPlayerDataFinish)
  return target;
}

size_t LoadPlayerDataFinish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.LoadPlayerDataFinish)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  // uint32 nTempID = 2;
  if (this->ntempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntempid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadPlayerDataFinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.LoadPlayerDataFinish)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPlayerDataFinish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadPlayerDataFinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.LoadPlayerDataFinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.LoadPlayerDataFinish)
    MergeFrom(*source);
  }
}

void LoadPlayerDataFinish::MergeFrom(const LoadPlayerDataFinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.LoadPlayerDataFinish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
  if (from.ntempid() != 0) {
    set_ntempid(from.ntempid());
  }
}

void LoadPlayerDataFinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.LoadPlayerDataFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPlayerDataFinish::CopyFrom(const LoadPlayerDataFinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.LoadPlayerDataFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPlayerDataFinish::IsInitialized() const {
  return true;
}

void LoadPlayerDataFinish::Swap(LoadPlayerDataFinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadPlayerDataFinish::InternalSwap(LoadPlayerDataFinish* other) {
  using std::swap;
  swap(ncode_, other->ncode_);
  swap(ntempid_, other->ntempid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadPlayerDataFinish::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMove::kXFieldNumber;
const int PlayerMove::kYFieldNumber;
const int PlayerMove::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMove::PlayerMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsPlayerMove();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.PlayerMove)
}
PlayerMove::PlayerMove(const PlayerMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:netData.PlayerMove)
}

void PlayerMove::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

PlayerMove::~PlayerMove() {
  // @@protoc_insertion_point(destructor:netData.PlayerMove)
  SharedDtor();
}

void PlayerMove::SharedDtor() {
}

void PlayerMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMove::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMove& PlayerMove::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsPlayerMove();
  return *internal_default_instance();
}


void PlayerMove::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.PlayerMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PlayerMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.PlayerMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.PlayerMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.PlayerMove)
  return false;
#undef DO_
}

void PlayerMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.PlayerMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.PlayerMove)
}

::google::protobuf::uint8* PlayerMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.PlayerMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.PlayerMove)
  return target;
}

size_t PlayerMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.PlayerMove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.PlayerMove)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.PlayerMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.PlayerMove)
    MergeFrom(*source);
  }
}

void PlayerMove::MergeFrom(const PlayerMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.PlayerMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PlayerMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.PlayerMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMove::CopyFrom(const PlayerMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.PlayerMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMove::IsInitialized() const {
  return true;
}

void PlayerMove::Swap(PlayerMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMove::InternalSwap(PlayerMove* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMove::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerMoveRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMoveRet::kXFieldNumber;
const int PlayerMoveRet::kYFieldNumber;
const int PlayerMoveRet::kZFieldNumber;
const int PlayerMoveRet::kNTempIDFieldNumber;
const int PlayerMoveRet::kNCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMoveRet::PlayerMoveRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsPlayerMoveRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.PlayerMoveRet)
}
PlayerMoveRet::PlayerMoveRet(const PlayerMoveRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&ncode_) -
    reinterpret_cast<char*>(&x_)) + sizeof(ncode_));
  // @@protoc_insertion_point(copy_constructor:netData.PlayerMoveRet)
}

void PlayerMoveRet::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncode_) -
      reinterpret_cast<char*>(&x_)) + sizeof(ncode_));
  _cached_size_ = 0;
}

PlayerMoveRet::~PlayerMoveRet() {
  // @@protoc_insertion_point(destructor:netData.PlayerMoveRet)
  SharedDtor();
}

void PlayerMoveRet::SharedDtor() {
}

void PlayerMoveRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMoveRet::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMoveRet& PlayerMoveRet::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsPlayerMoveRet();
  return *internal_default_instance();
}


void PlayerMoveRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.PlayerMoveRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncode_) -
      reinterpret_cast<char*>(&x_)) + sizeof(ncode_));
  _internal_metadata_.Clear();
}

bool PlayerMoveRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.PlayerMoveRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTempID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nCode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.PlayerMoveRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.PlayerMoveRet)
  return false;
#undef DO_
}

void PlayerMoveRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.PlayerMoveRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ntempid(), output);
  }

  // int32 nCode = 5;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ncode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.PlayerMoveRet)
}

::google::protobuf::uint8* PlayerMoveRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.PlayerMoveRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ntempid(), target);
  }

  // int32 nCode = 5;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ncode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.PlayerMoveRet)
  return target;
}

size_t PlayerMoveRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.PlayerMoveRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntempid());
  }

  // int32 nCode = 5;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMoveRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.PlayerMoveRet)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMoveRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMoveRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.PlayerMoveRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.PlayerMoveRet)
    MergeFrom(*source);
  }
}

void PlayerMoveRet::MergeFrom(const PlayerMoveRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.PlayerMoveRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.ntempid() != 0) {
    set_ntempid(from.ntempid());
  }
  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
}

void PlayerMoveRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.PlayerMoveRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMoveRet::CopyFrom(const PlayerMoveRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.PlayerMoveRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMoveRet::IsInitialized() const {
  return true;
}

void PlayerMoveRet::Swap(PlayerMoveRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMoveRet::InternalSwap(PlayerMoveRet* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(ntempid_, other->ntempid_);
  swap(ncode_, other->ncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMoveRet::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMap::kNMapIDFieldNumber;
const int ChangeMap::kSEtokenFieldNumber;
const int ChangeMap::kSSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMap::ChangeMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsChangeMap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.ChangeMap)
}
ChangeMap::ChangeMap(const ChangeMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.setoken().size() > 0) {
    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ssecret().size() > 0) {
    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
  nmapid_ = from.nmapid_;
  // @@protoc_insertion_point(copy_constructor:netData.ChangeMap)
}

void ChangeMap::SharedCtor() {
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmapid_ = 0;
  _cached_size_ = 0;
}

ChangeMap::~ChangeMap() {
  // @@protoc_insertion_point(destructor:netData.ChangeMap)
  SharedDtor();
}

void ChangeMap::SharedDtor() {
  setoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMap::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMap& ChangeMap::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsChangeMap();
  return *internal_default_instance();
}


void ChangeMap::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.ChangeMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmapid_ = 0;
  _internal_metadata_.Clear();
}

bool ChangeMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.ChangeMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nMapID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sEtoken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_setoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->setoken().data(), static_cast<int>(this->setoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.ChangeMap.sEtoken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sSecret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.ChangeMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.ChangeMap)
  return false;
#undef DO_
}

void ChangeMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.ChangeMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nmapid(), output);
  }

  // string sEtoken = 2;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.ChangeMap.sEtoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->setoken(), output);
  }

  // bytes sSecret = 3;
  if (this->ssecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ssecret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.ChangeMap)
}

::google::protobuf::uint8* ChangeMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.ChangeMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nmapid(), target);
  }

  // string sEtoken = 2;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.ChangeMap.sEtoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->setoken(), target);
  }

  // bytes sSecret = 3;
  if (this->ssecret().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ssecret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.ChangeMap)
  return target;
}

size_t ChangeMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.ChangeMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sEtoken = 2;
  if (this->setoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->setoken());
  }

  // bytes sSecret = 3;
  if (this->ssecret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ssecret());
  }

  // int32 nMapID = 1;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.ChangeMap)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.ChangeMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.ChangeMap)
    MergeFrom(*source);
  }
}

void ChangeMap::MergeFrom(const ChangeMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.ChangeMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setoken().size() > 0) {

    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  if (from.ssecret().size() > 0) {

    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
}

void ChangeMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.ChangeMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMap::CopyFrom(const ChangeMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.ChangeMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMap::IsInitialized() const {
  return true;
}

void ChangeMap::Swap(ChangeMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMap::InternalSwap(ChangeMap* other) {
  using std::swap;
  setoken_.Swap(&other->setoken_);
  ssecret_.Swap(&other->ssecret_);
  swap(nmapid_, other->nmapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMap::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeMapRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMapRet::kNCodeFieldNumber;
const int ChangeMapRet::kBChangeIPFieldNumber;
const int ChangeMapRet::kNServerIDFieldNumber;
const int ChangeMapRet::kSIPFieldNumber;
const int ChangeMapRet::kNPortFieldNumber;
const int ChangeMapRet::kNMapIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMapRet::ChangeMapRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsChangeMapRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.ChangeMapRet)
}
ChangeMapRet::ChangeMapRet(const ChangeMapRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&ncode_, &from.ncode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nmapid_) -
    reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  // @@protoc_insertion_point(copy_constructor:netData.ChangeMapRet)
}

void ChangeMapRet::SharedCtor() {
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nmapid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  _cached_size_ = 0;
}

ChangeMapRet::~ChangeMapRet() {
  // @@protoc_insertion_point(destructor:netData.ChangeMapRet)
  SharedDtor();
}

void ChangeMapRet::SharedDtor() {
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeMapRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMapRet::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMapRet& ChangeMapRet::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsChangeMapRet();
  return *internal_default_instance();
}


void ChangeMapRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.ChangeMapRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nmapid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  _internal_metadata_.Clear();
}

bool ChangeMapRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.ChangeMapRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bChangeIP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bchangeip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nServerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIP = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.ChangeMapRet.sIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nPort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nMapID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.ChangeMapRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.ChangeMapRet)
  return false;
#undef DO_
}

void ChangeMapRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.ChangeMapRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  // bool bChangeIP = 2;
  if (this->bchangeip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bchangeip(), output);
  }

  // int32 nServerID = 3;
  if (this->nserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nserverid(), output);
  }

  // string sIP = 4;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.ChangeMapRet.sIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sip(), output);
  }

  // int32 nPort = 5;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nport(), output);
  }

  // int32 nMapID = 6;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nmapid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.ChangeMapRet)
}

::google::protobuf::uint8* ChangeMapRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.ChangeMapRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  // bool bChangeIP = 2;
  if (this->bchangeip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bchangeip(), target);
  }

  // int32 nServerID = 3;
  if (this->nserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nserverid(), target);
  }

  // string sIP = 4;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.ChangeMapRet.sIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sip(), target);
  }

  // int32 nPort = 5;
  if (this->nport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nport(), target);
  }

  // int32 nMapID = 6;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nmapid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.ChangeMapRet)
  return target;
}

size_t ChangeMapRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.ChangeMapRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sIP = 4;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  // bool bChangeIP = 2;
  if (this->bchangeip() != 0) {
    total_size += 1 + 1;
  }

  // int32 nServerID = 3;
  if (this->nserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nserverid());
  }

  // int32 nPort = 5;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nport());
  }

  // int32 nMapID = 6;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMapRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.ChangeMapRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMapRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMapRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.ChangeMapRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.ChangeMapRet)
    MergeFrom(*source);
  }
}

void ChangeMapRet::MergeFrom(const ChangeMapRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.ChangeMapRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
  if (from.bchangeip() != 0) {
    set_bchangeip(from.bchangeip());
  }
  if (from.nserverid() != 0) {
    set_nserverid(from.nserverid());
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
}

void ChangeMapRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.ChangeMapRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMapRet::CopyFrom(const ChangeMapRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.ChangeMapRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMapRet::IsInitialized() const {
  return true;
}

void ChangeMapRet::Swap(ChangeMapRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMapRet::InternalSwap(ChangeMapRet* other) {
  using std::swap;
  sip_.Swap(&other->sip_);
  swap(ncode_, other->ncode_);
  swap(bchangeip_, other->bchangeip_);
  swap(nserverid_, other->nserverid_);
  swap(nport_, other->nport_);
  swap(nmapid_, other->nmapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMapRet::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdataObjInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdataObjInfo::kXFieldNumber;
const int UpdataObjInfo::kYFieldNumber;
const int UpdataObjInfo::kZFieldNumber;
const int UpdataObjInfo::kNTempIDFieldNumber;
const int UpdataObjInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdataObjInfo::UpdataObjInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsUpdataObjInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.UpdataObjInfo)
}
UpdataObjInfo::UpdataObjInfo(const UpdataObjInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&ntempid_) -
    reinterpret_cast<char*>(&x_)) + sizeof(ntempid_));
  // @@protoc_insertion_point(copy_constructor:netData.UpdataObjInfo)
}

void UpdataObjInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntempid_) -
      reinterpret_cast<char*>(&x_)) + sizeof(ntempid_));
  _cached_size_ = 0;
}

UpdataObjInfo::~UpdataObjInfo() {
  // @@protoc_insertion_point(destructor:netData.UpdataObjInfo)
  SharedDtor();
}

void UpdataObjInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdataObjInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdataObjInfo::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdataObjInfo& UpdataObjInfo::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsUpdataObjInfo();
  return *internal_default_instance();
}


void UpdataObjInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.UpdataObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntempid_) -
      reinterpret_cast<char*>(&x_)) + sizeof(ntempid_));
  _internal_metadata_.Clear();
}

bool UpdataObjInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.UpdataObjInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTempID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.UpdataObjInfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.UpdataObjInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.UpdataObjInfo)
  return false;
#undef DO_
}

void UpdataObjInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.UpdataObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ntempid(), output);
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.UpdataObjInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.UpdataObjInfo)
}

::google::protobuf::uint8* UpdataObjInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.UpdataObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ntempid(), target);
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.UpdataObjInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.UpdataObjInfo)
  return target;
}

size_t UpdataObjInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.UpdataObjInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // uint32 nTempID = 4;
  if (this->ntempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntempid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdataObjInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.UpdataObjInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdataObjInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdataObjInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.UpdataObjInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.UpdataObjInfo)
    MergeFrom(*source);
  }
}

void UpdataObjInfo::MergeFrom(const UpdataObjInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.UpdataObjInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.ntempid() != 0) {
    set_ntempid(from.ntempid());
  }
}

void UpdataObjInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.UpdataObjInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdataObjInfo::CopyFrom(const UpdataObjInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.UpdataObjInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdataObjInfo::IsInitialized() const {
  return true;
}

void UpdataObjInfo::Swap(UpdataObjInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdataObjInfo::InternalSwap(UpdataObjInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(ntempid_, other->ntempid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdataObjInfo::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelObjFromView::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelObjFromView::kNTempIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelObjFromView::DelObjFromView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ClientMsg_2eproto::InitDefaultsDelObjFromView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.DelObjFromView)
}
DelObjFromView::DelObjFromView(const DelObjFromView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ntempid_ = from.ntempid_;
  // @@protoc_insertion_point(copy_constructor:netData.DelObjFromView)
}

void DelObjFromView::SharedCtor() {
  ntempid_ = 0u;
  _cached_size_ = 0;
}

DelObjFromView::~DelObjFromView() {
  // @@protoc_insertion_point(destructor:netData.DelObjFromView)
  SharedDtor();
}

void DelObjFromView::SharedDtor() {
}

void DelObjFromView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelObjFromView::descriptor() {
  ::protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelObjFromView& DelObjFromView::default_instance() {
  ::protobuf_ClientMsg_2eproto::InitDefaultsDelObjFromView();
  return *internal_default_instance();
}


void DelObjFromView::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.DelObjFromView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ntempid_ = 0u;
  _internal_metadata_.Clear();
}

bool DelObjFromView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.DelObjFromView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nTempID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.DelObjFromView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.DelObjFromView)
  return false;
#undef DO_
}

void DelObjFromView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.DelObjFromView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nTempID = 1;
  if (this->ntempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ntempid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.DelObjFromView)
}

::google::protobuf::uint8* DelObjFromView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.DelObjFromView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nTempID = 1;
  if (this->ntempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ntempid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.DelObjFromView)
  return target;
}

size_t DelObjFromView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.DelObjFromView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 nTempID = 1;
  if (this->ntempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntempid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelObjFromView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.DelObjFromView)
  GOOGLE_DCHECK_NE(&from, this);
  const DelObjFromView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelObjFromView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.DelObjFromView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.DelObjFromView)
    MergeFrom(*source);
  }
}

void DelObjFromView::MergeFrom(const DelObjFromView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.DelObjFromView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ntempid() != 0) {
    set_ntempid(from.ntempid());
  }
}

void DelObjFromView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.DelObjFromView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelObjFromView::CopyFrom(const DelObjFromView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.DelObjFromView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelObjFromView::IsInitialized() const {
  return true;
}

void DelObjFromView::Swap(DelObjFromView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelObjFromView::InternalSwap(DelObjFromView* other) {
  using std::swap;
  swap(ntempid_, other->ntempid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelObjFromView::GetMetadata() const {
  protobuf_ClientMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace netData
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::Ping* Arena::Create< ::netData::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::netData::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::LoadPlayerDataFinish* Arena::Create< ::netData::LoadPlayerDataFinish >(Arena* arena) {
  return Arena::CreateInternal< ::netData::LoadPlayerDataFinish >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::PlayerMove* Arena::Create< ::netData::PlayerMove >(Arena* arena) {
  return Arena::CreateInternal< ::netData::PlayerMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::PlayerMoveRet* Arena::Create< ::netData::PlayerMoveRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::PlayerMoveRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::ChangeMap* Arena::Create< ::netData::ChangeMap >(Arena* arena) {
  return Arena::CreateInternal< ::netData::ChangeMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::ChangeMapRet* Arena::Create< ::netData::ChangeMapRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::ChangeMapRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::UpdataObjInfo* Arena::Create< ::netData::UpdataObjInfo >(Arena* arena) {
  return Arena::CreateInternal< ::netData::UpdataObjInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::DelObjFromView* Arena::Create< ::netData::DelObjFromView >(Arena* arena) {
  return Arena::CreateInternal< ::netData::DelObjFromView >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
