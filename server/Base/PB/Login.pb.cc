// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace netData {
class HandShakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandShake>
      _instance;
} _HandShake_default_instance_;
class HandShakeRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandShakeRet>
      _instance;
} _HandShakeRet_default_instance_;
class ChallengeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Challenge>
      _instance;
} _Challenge_default_instance_;
class ChallengeRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChallengeRet>
      _instance;
} _ChallengeRet_default_instance_;
class AuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Auth>
      _instance;
} _Auth_default_instance_;
class AuthRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRet>
      _instance;
} _AuthRet_default_instance_;
class LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Login>
      _instance;
} _Login_default_instance_;
class LoginRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRet>
      _instance;
} _LoginRet_default_instance_;
class PlayerLiteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLite>
      _instance;
} _PlayerLite_default_instance_;
class PlayerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerList>
      _instance;
} _PlayerList_default_instance_;
class PlayerListRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerListRet>
      _instance;
} _PlayerListRet_default_instance_;
class CreatePlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatePlayer>
      _instance;
} _CreatePlayer_default_instance_;
class CreatePlayerRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatePlayerRet>
      _instance;
} _CreatePlayerRet_default_instance_;
class SelectPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectPlayer>
      _instance;
} _SelectPlayer_default_instance_;
class SelectPlayerRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectPlayerRet>
      _instance;
} _SelectPlayerRet_default_instance_;
}  // namespace netData
namespace protobuf_Login_2eproto {
void InitDefaultsHandShakeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_HandShake_default_instance_;
    new (ptr) ::netData::HandShake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::HandShake::InitAsDefaultInstance();
}

void InitDefaultsHandShake() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHandShakeImpl);
}

void InitDefaultsHandShakeRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_HandShakeRet_default_instance_;
    new (ptr) ::netData::HandShakeRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::HandShakeRet::InitAsDefaultInstance();
}

void InitDefaultsHandShakeRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHandShakeRetImpl);
}

void InitDefaultsChallengeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_Challenge_default_instance_;
    new (ptr) ::netData::Challenge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::Challenge::InitAsDefaultInstance();
}

void InitDefaultsChallenge() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChallengeImpl);
}

void InitDefaultsChallengeRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_ChallengeRet_default_instance_;
    new (ptr) ::netData::ChallengeRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::ChallengeRet::InitAsDefaultInstance();
}

void InitDefaultsChallengeRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChallengeRetImpl);
}

void InitDefaultsAuthImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_Auth_default_instance_;
    new (ptr) ::netData::Auth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::Auth::InitAsDefaultInstance();
}

void InitDefaultsAuth() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthImpl);
}

void InitDefaultsAuthRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_AuthRet_default_instance_;
    new (ptr) ::netData::AuthRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::AuthRet::InitAsDefaultInstance();
}

void InitDefaultsAuthRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRetImpl);
}

void InitDefaultsLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_Login_default_instance_;
    new (ptr) ::netData::Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::Login::InitAsDefaultInstance();
}

void InitDefaultsLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginImpl);
}

void InitDefaultsLoginRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_LoginRet_default_instance_;
    new (ptr) ::netData::LoginRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::LoginRet::InitAsDefaultInstance();
}

void InitDefaultsLoginRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRetImpl);
}

void InitDefaultsPlayerLiteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_PlayerLite_default_instance_;
    new (ptr) ::netData::PlayerLite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::PlayerLite::InitAsDefaultInstance();
}

void InitDefaultsPlayerLite() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerLiteImpl);
}

void InitDefaultsPlayerListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_PlayerList_default_instance_;
    new (ptr) ::netData::PlayerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::PlayerList::InitAsDefaultInstance();
}

void InitDefaultsPlayerList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerListImpl);
}

void InitDefaultsPlayerListRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Login_2eproto::InitDefaultsPlayerLite();
  {
    void* ptr = &::netData::_PlayerListRet_default_instance_;
    new (ptr) ::netData::PlayerListRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::PlayerListRet::InitAsDefaultInstance();
}

void InitDefaultsPlayerListRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerListRetImpl);
}

void InitDefaultsCreatePlayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_CreatePlayer_default_instance_;
    new (ptr) ::netData::CreatePlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::CreatePlayer::InitAsDefaultInstance();
}

void InitDefaultsCreatePlayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreatePlayerImpl);
}

void InitDefaultsCreatePlayerRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Login_2eproto::InitDefaultsPlayerLite();
  {
    void* ptr = &::netData::_CreatePlayerRet_default_instance_;
    new (ptr) ::netData::CreatePlayerRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::CreatePlayerRet::InitAsDefaultInstance();
}

void InitDefaultsCreatePlayerRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreatePlayerRetImpl);
}

void InitDefaultsSelectPlayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_SelectPlayer_default_instance_;
    new (ptr) ::netData::SelectPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::SelectPlayer::InitAsDefaultInstance();
}

void InitDefaultsSelectPlayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectPlayerImpl);
}

void InitDefaultsSelectPlayerRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::netData::_SelectPlayerRet_default_instance_;
    new (ptr) ::netData::SelectPlayerRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netData::SelectPlayerRet::InitAsDefaultInstance();
}

void InitDefaultsSelectPlayerRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectPlayerRetImpl);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::HandShake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::HandShake, sclientkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::HandShakeRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::HandShakeRet, schallenge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::HandShakeRet, sserverkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Challenge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Challenge, shmac_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChallengeRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::ChallengeRet, ncode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Auth, setoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Auth, ssecret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, ncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, nserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::AuthRet, nmapid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Login, stoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::Login, ssecret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::LoginRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::LoginRet, ncode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerLite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerLite, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerLite, sname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerLite, njob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerLite, nsex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerList, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerListRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::PlayerListRet, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayer, sname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayer, njob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayer, nsex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayer, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayerRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayerRet, ncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::CreatePlayerRet, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::SelectPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::SelectPlayer, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::SelectPlayerRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netData::SelectPlayerRet, ncode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::netData::HandShake)},
  { 6, -1, sizeof(::netData::HandShakeRet)},
  { 13, -1, sizeof(::netData::Challenge)},
  { 19, -1, sizeof(::netData::ChallengeRet)},
  { 25, -1, sizeof(::netData::Auth)},
  { 32, -1, sizeof(::netData::AuthRet)},
  { 42, -1, sizeof(::netData::Login)},
  { 49, -1, sizeof(::netData::LoginRet)},
  { 55, -1, sizeof(::netData::PlayerLite)},
  { 64, -1, sizeof(::netData::PlayerList)},
  { 70, -1, sizeof(::netData::PlayerListRet)},
  { 76, -1, sizeof(::netData::CreatePlayer)},
  { 85, -1, sizeof(::netData::CreatePlayerRet)},
  { 92, -1, sizeof(::netData::SelectPlayer)},
  { 98, -1, sizeof(::netData::SelectPlayerRet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_HandShake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_HandShakeRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_Challenge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_ChallengeRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_Auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_AuthRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_LoginRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_PlayerLite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_PlayerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_PlayerListRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_CreatePlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_CreatePlayerRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_SelectPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netData::_SelectPlayerRet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Login.proto\022\007netData\"\037\n\tHandShake\022\022\n\ns"
      "ClientKey\030\001 \001(\014\"6\n\014HandShakeRet\022\022\n\nsChal"
      "lenge\030\001 \001(\014\022\022\n\nsServerKey\030\002 \001(\014\"\032\n\tChall"
      "enge\022\r\n\005sHmac\030\001 \001(\t\"K\n\014ChallengeRet\022\r\n\005n"
      "Code\030\001 \001(\005\",\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUC"
      "C\020\001\022\013\n\007EC_FAIL\020\002\"(\n\004Auth\022\017\n\007sEtoken\030\001 \001("
      "\t\022\017\n\007sSecret\030\002 \001(\014\"\300\001\n\007AuthRet\022\r\n\005nCode\030"
      "\001 \001(\005\022\021\n\tnServerID\030\002 \001(\005\022\n\n\002ip\030\003 \001(\t\022\014\n\004"
      "port\030\004 \001(\005\022\016\n\006nMapID\030\005 \001(\005\"i\n\002EC\022\014\n\010EC_O"
      "THER\020\000\022\013\n\007EC_SUCC\020\001\022\013\n\007EC_FAIL\020\002\022\020\n\014EC_H"
      "ANDSHAKE\020\003\022\r\n\tEC_SERVER\020\004\022\t\n\005EC_DB\020\005\022\017\n\013"
      "EC_AUTHINFO\020\006\"(\n\005Login\022\016\n\006sToken\030\001 \001(\t\022\017"
      "\n\007sSecret\030\002 \001(\014\"G\n\010LoginRet\022\r\n\005nCode\030\001 \001"
      "(\005\",\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\013\n\007E"
      "C_FAIL\020\002\"E\n\nPlayerLite\022\014\n\004guid\030\001 \001(\003\022\r\n\005"
      "sName\030\002 \001(\t\022\014\n\004nJob\030\003 \001(\005\022\014\n\004nSex\030\004 \001(\005\""
      "\035\n\nPlayerList\022\017\n\007account\030\001 \001(\t\"2\n\rPlayer"
      "ListRet\022!\n\004list\030\001 \003(\0132\023.netData.PlayerLi"
      "te\"J\n\014CreatePlayer\022\r\n\005sName\030\001 \001(\t\022\014\n\004nJo"
      "b\030\002 \001(\005\022\014\n\004nSex\030\003 \001(\005\022\017\n\007account\030\004 \001(\t\"q"
      "\n\017CreatePlayerRet\022\r\n\005nCode\030\001 \001(\005\022!\n\004info"
      "\030\002 \001(\0132\023.netData.PlayerLite\",\n\002EC\022\014\n\010EC_"
      "OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\013\n\007EC_FAIL\020\002\"\034\n\014Sel"
      "ectPlayer\022\014\n\004guid\030\001 \001(\003\"N\n\017SelectPlayerR"
      "et\022\r\n\005nCode\030\001 \001(\005\",\n\002EC\022\014\n\010EC_OTHER\020\000\022\013\n"
      "\007EC_SUCC\020\001\022\013\n\007EC_FAIL\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1031);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Login.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Login_2eproto
namespace netData {
const ::google::protobuf::EnumDescriptor* ChallengeRet_EC_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[0];
}
bool ChallengeRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChallengeRet_EC ChallengeRet::EC_OTHER;
const ChallengeRet_EC ChallengeRet::EC_SUCC;
const ChallengeRet_EC ChallengeRet::EC_FAIL;
const ChallengeRet_EC ChallengeRet::EC_MIN;
const ChallengeRet_EC ChallengeRet::EC_MAX;
const int ChallengeRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AuthRet_EC_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[1];
}
bool AuthRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AuthRet_EC AuthRet::EC_OTHER;
const AuthRet_EC AuthRet::EC_SUCC;
const AuthRet_EC AuthRet::EC_FAIL;
const AuthRet_EC AuthRet::EC_HANDSHAKE;
const AuthRet_EC AuthRet::EC_SERVER;
const AuthRet_EC AuthRet::EC_DB;
const AuthRet_EC AuthRet::EC_AUTHINFO;
const AuthRet_EC AuthRet::EC_MIN;
const AuthRet_EC AuthRet::EC_MAX;
const int AuthRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LoginRet_EC_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[2];
}
bool LoginRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginRet_EC LoginRet::EC_OTHER;
const LoginRet_EC LoginRet::EC_SUCC;
const LoginRet_EC LoginRet::EC_FAIL;
const LoginRet_EC LoginRet::EC_MIN;
const LoginRet_EC LoginRet::EC_MAX;
const int LoginRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CreatePlayerRet_EC_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[3];
}
bool CreatePlayerRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreatePlayerRet_EC CreatePlayerRet::EC_OTHER;
const CreatePlayerRet_EC CreatePlayerRet::EC_SUCC;
const CreatePlayerRet_EC CreatePlayerRet::EC_FAIL;
const CreatePlayerRet_EC CreatePlayerRet::EC_MIN;
const CreatePlayerRet_EC CreatePlayerRet::EC_MAX;
const int CreatePlayerRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SelectPlayerRet_EC_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[4];
}
bool SelectPlayerRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SelectPlayerRet_EC SelectPlayerRet::EC_OTHER;
const SelectPlayerRet_EC SelectPlayerRet::EC_SUCC;
const SelectPlayerRet_EC SelectPlayerRet::EC_FAIL;
const SelectPlayerRet_EC SelectPlayerRet::EC_MIN;
const SelectPlayerRet_EC SelectPlayerRet::EC_MAX;
const int SelectPlayerRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HandShake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandShake::kSClientKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandShake::HandShake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsHandShake();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.HandShake)
}
HandShake::HandShake(const HandShake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sclientkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sclientkey().size() > 0) {
    sclientkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sclientkey_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.HandShake)
}

void HandShake::SharedCtor() {
  sclientkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HandShake::~HandShake() {
  // @@protoc_insertion_point(destructor:netData.HandShake)
  SharedDtor();
}

void HandShake::SharedDtor() {
  sclientkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandShake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandShake::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HandShake& HandShake::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsHandShake();
  return *internal_default_instance();
}


void HandShake::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.HandShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sclientkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HandShake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.HandShake)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sClientKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sclientkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.HandShake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.HandShake)
  return false;
#undef DO_
}

void HandShake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.HandShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sClientKey = 1;
  if (this->sclientkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sclientkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.HandShake)
}

::google::protobuf::uint8* HandShake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.HandShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sClientKey = 1;
  if (this->sclientkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sclientkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.HandShake)
  return target;
}

size_t HandShake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.HandShake)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sClientKey = 1;
  if (this->sclientkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sclientkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandShake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.HandShake)
  GOOGLE_DCHECK_NE(&from, this);
  const HandShake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HandShake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.HandShake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.HandShake)
    MergeFrom(*source);
  }
}

void HandShake::MergeFrom(const HandShake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.HandShake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sclientkey().size() > 0) {

    sclientkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sclientkey_);
  }
}

void HandShake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.HandShake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandShake::CopyFrom(const HandShake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.HandShake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandShake::IsInitialized() const {
  return true;
}

void HandShake::Swap(HandShake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandShake::InternalSwap(HandShake* other) {
  using std::swap;
  sclientkey_.Swap(&other->sclientkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandShake::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HandShakeRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandShakeRet::kSChallengeFieldNumber;
const int HandShakeRet::kSServerKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandShakeRet::HandShakeRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsHandShakeRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.HandShakeRet)
}
HandShakeRet::HandShakeRet(const HandShakeRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schallenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.schallenge().size() > 0) {
    schallenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schallenge_);
  }
  sserverkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sserverkey().size() > 0) {
    sserverkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sserverkey_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.HandShakeRet)
}

void HandShakeRet::SharedCtor() {
  schallenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserverkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HandShakeRet::~HandShakeRet() {
  // @@protoc_insertion_point(destructor:netData.HandShakeRet)
  SharedDtor();
}

void HandShakeRet::SharedDtor() {
  schallenge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserverkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandShakeRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandShakeRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HandShakeRet& HandShakeRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsHandShakeRet();
  return *internal_default_instance();
}


void HandShakeRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.HandShakeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schallenge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserverkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HandShakeRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.HandShakeRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sChallenge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schallenge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sServerKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sserverkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.HandShakeRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.HandShakeRet)
  return false;
#undef DO_
}

void HandShakeRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.HandShakeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sChallenge = 1;
  if (this->schallenge().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->schallenge(), output);
  }

  // bytes sServerKey = 2;
  if (this->sserverkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sserverkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.HandShakeRet)
}

::google::protobuf::uint8* HandShakeRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.HandShakeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sChallenge = 1;
  if (this->schallenge().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->schallenge(), target);
  }

  // bytes sServerKey = 2;
  if (this->sserverkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sserverkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.HandShakeRet)
  return target;
}

size_t HandShakeRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.HandShakeRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sChallenge = 1;
  if (this->schallenge().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->schallenge());
  }

  // bytes sServerKey = 2;
  if (this->sserverkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sserverkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandShakeRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.HandShakeRet)
  GOOGLE_DCHECK_NE(&from, this);
  const HandShakeRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HandShakeRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.HandShakeRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.HandShakeRet)
    MergeFrom(*source);
  }
}

void HandShakeRet::MergeFrom(const HandShakeRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.HandShakeRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.schallenge().size() > 0) {

    schallenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schallenge_);
  }
  if (from.sserverkey().size() > 0) {

    sserverkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sserverkey_);
  }
}

void HandShakeRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.HandShakeRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandShakeRet::CopyFrom(const HandShakeRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.HandShakeRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandShakeRet::IsInitialized() const {
  return true;
}

void HandShakeRet::Swap(HandShakeRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandShakeRet::InternalSwap(HandShakeRet* other) {
  using std::swap;
  schallenge_.Swap(&other->schallenge_);
  sserverkey_.Swap(&other->sserverkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandShakeRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Challenge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Challenge::kSHmacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Challenge::Challenge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsChallenge();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.Challenge)
}
Challenge::Challenge(const Challenge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shmac().size() > 0) {
    shmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shmac_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.Challenge)
}

void Challenge::SharedCtor() {
  shmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Challenge::~Challenge() {
  // @@protoc_insertion_point(destructor:netData.Challenge)
  SharedDtor();
}

void Challenge::SharedDtor() {
  shmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Challenge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Challenge::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Challenge& Challenge::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsChallenge();
  return *internal_default_instance();
}


void Challenge::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.Challenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Challenge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.Challenge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sHmac = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shmac().data(), static_cast<int>(this->shmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.Challenge.sHmac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.Challenge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.Challenge)
  return false;
#undef DO_
}

void Challenge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.Challenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sHmac = 1;
  if (this->shmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shmac().data(), static_cast<int>(this->shmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Challenge.sHmac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->shmac(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.Challenge)
}

::google::protobuf::uint8* Challenge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.Challenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sHmac = 1;
  if (this->shmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shmac().data(), static_cast<int>(this->shmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Challenge.sHmac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->shmac(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.Challenge)
  return target;
}

size_t Challenge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.Challenge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sHmac = 1;
  if (this->shmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shmac());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Challenge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.Challenge)
  GOOGLE_DCHECK_NE(&from, this);
  const Challenge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Challenge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.Challenge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.Challenge)
    MergeFrom(*source);
  }
}

void Challenge::MergeFrom(const Challenge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.Challenge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shmac().size() > 0) {

    shmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shmac_);
  }
}

void Challenge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.Challenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Challenge::CopyFrom(const Challenge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.Challenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Challenge::IsInitialized() const {
  return true;
}

void Challenge::Swap(Challenge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Challenge::InternalSwap(Challenge* other) {
  using std::swap;
  shmac_.Swap(&other->shmac_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Challenge::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChallengeRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChallengeRet::kNCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChallengeRet::ChallengeRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsChallengeRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.ChallengeRet)
}
ChallengeRet::ChallengeRet(const ChallengeRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ncode_ = from.ncode_;
  // @@protoc_insertion_point(copy_constructor:netData.ChallengeRet)
}

void ChallengeRet::SharedCtor() {
  ncode_ = 0;
  _cached_size_ = 0;
}

ChallengeRet::~ChallengeRet() {
  // @@protoc_insertion_point(destructor:netData.ChallengeRet)
  SharedDtor();
}

void ChallengeRet::SharedDtor() {
}

void ChallengeRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChallengeRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChallengeRet& ChallengeRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsChallengeRet();
  return *internal_default_instance();
}


void ChallengeRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.ChallengeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ncode_ = 0;
  _internal_metadata_.Clear();
}

bool ChallengeRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.ChallengeRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.ChallengeRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.ChallengeRet)
  return false;
#undef DO_
}

void ChallengeRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.ChallengeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.ChallengeRet)
}

::google::protobuf::uint8* ChallengeRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.ChallengeRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.ChallengeRet)
  return target;
}

size_t ChallengeRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.ChallengeRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChallengeRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.ChallengeRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ChallengeRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChallengeRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.ChallengeRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.ChallengeRet)
    MergeFrom(*source);
  }
}

void ChallengeRet::MergeFrom(const ChallengeRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.ChallengeRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
}

void ChallengeRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.ChallengeRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChallengeRet::CopyFrom(const ChallengeRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.ChallengeRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChallengeRet::IsInitialized() const {
  return true;
}

void ChallengeRet::Swap(ChallengeRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChallengeRet::InternalSwap(ChallengeRet* other) {
  using std::swap;
  swap(ncode_, other->ncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChallengeRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Auth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Auth::kSEtokenFieldNumber;
const int Auth::kSSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Auth::Auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsAuth();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.Auth)
}
Auth::Auth(const Auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.setoken().size() > 0) {
    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ssecret().size() > 0) {
    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.Auth)
}

void Auth::SharedCtor() {
  setoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Auth::~Auth() {
  // @@protoc_insertion_point(destructor:netData.Auth)
  SharedDtor();
}

void Auth::SharedDtor() {
  setoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Auth::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Auth& Auth::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsAuth();
  return *internal_default_instance();
}


void Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.Auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sEtoken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_setoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->setoken().data(), static_cast<int>(this->setoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.Auth.sEtoken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sSecret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.Auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.Auth)
  return false;
#undef DO_
}

void Auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Auth.sEtoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->setoken(), output);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ssecret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.Auth)
}

::google::protobuf::uint8* Auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setoken().data(), static_cast<int>(this->setoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Auth.sEtoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->setoken(), target);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ssecret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.Auth)
  return target;
}

size_t Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.Auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sEtoken = 1;
  if (this->setoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->setoken());
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ssecret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  const Auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.Auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.Auth)
    MergeFrom(*source);
  }
}

void Auth::MergeFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setoken().size() > 0) {

    setoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setoken_);
  }
  if (from.ssecret().size() > 0) {

    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
}

void Auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Auth::CopyFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Auth::IsInitialized() const {
  return true;
}

void Auth::Swap(Auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Auth::InternalSwap(Auth* other) {
  using std::swap;
  setoken_.Swap(&other->setoken_);
  ssecret_.Swap(&other->ssecret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Auth::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRet::kNCodeFieldNumber;
const int AuthRet::kNServerIDFieldNumber;
const int AuthRet::kIpFieldNumber;
const int AuthRet::kPortFieldNumber;
const int AuthRet::kNMapIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRet::AuthRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsAuthRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.AuthRet)
}
AuthRet::AuthRet(const AuthRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&ncode_, &from.ncode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nmapid_) -
    reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  // @@protoc_insertion_point(copy_constructor:netData.AuthRet)
}

void AuthRet::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nmapid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  _cached_size_ = 0;
}

AuthRet::~AuthRet() {
  // @@protoc_insertion_point(destructor:netData.AuthRet)
  SharedDtor();
}

void AuthRet::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRet& AuthRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsAuthRet();
  return *internal_default_instance();
}


void AuthRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.AuthRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nmapid_) -
      reinterpret_cast<char*>(&ncode_)) + sizeof(nmapid_));
  _internal_metadata_.Clear();
}

bool AuthRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.AuthRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nServerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.AuthRet.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nMapID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.AuthRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.AuthRet)
  return false;
#undef DO_
}

void AuthRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.AuthRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  // int32 nServerID = 2;
  if (this->nserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nserverid(), output);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.AuthRet.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // int32 nMapID = 5;
  if (this->nmapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nmapid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.AuthRet)
}

::google::protobuf::uint8* AuthRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.AuthRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  // int32 nServerID = 2;
  if (this->nserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nserverid(), target);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.AuthRet.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // int32 nMapID = 5;
  if (this->nmapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nmapid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.AuthRet)
  return target;
}

size_t AuthRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.AuthRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  // int32 nServerID = 2;
  if (this->nserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nserverid());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 nMapID = 5;
  if (this->nmapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.AuthRet)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.AuthRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.AuthRet)
    MergeFrom(*source);
  }
}

void AuthRet::MergeFrom(const AuthRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.AuthRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
  if (from.nserverid() != 0) {
    set_nserverid(from.nserverid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.nmapid() != 0) {
    set_nmapid(from.nmapid());
  }
}

void AuthRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.AuthRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRet::CopyFrom(const AuthRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.AuthRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRet::IsInitialized() const {
  return true;
}

void AuthRet::Swap(AuthRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRet::InternalSwap(AuthRet* other) {
  using std::swap;
  ip_.Swap(&other->ip_);
  swap(ncode_, other->ncode_);
  swap(nserverid_, other->nserverid_);
  swap(port_, other->port_);
  swap(nmapid_, other->nmapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kSTokenFieldNumber;
const int Login::kSSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoken().size() > 0) {
    stoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoken_);
  }
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ssecret().size() > 0) {
    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.Login)
}

void Login::SharedCtor() {
  stoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:netData.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  stoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login& Login::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsLogin();
  return *internal_default_instance();
}


void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoken().data(), static_cast<int>(this->stoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.Login.sToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sSecret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToken = 1;
  if (this->stoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoken().data(), static_cast<int>(this->stoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Login.sToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoken(), output);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ssecret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToken = 1;
  if (this->stoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoken().data(), static_cast<int>(this->stoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.Login.sToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stoken(), target);
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ssecret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.Login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sToken = 1;
  if (this->stoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoken());
  }

  // bytes sSecret = 2;
  if (this->ssecret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ssecret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoken().size() > 0) {

    stoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoken_);
  }
  if (from.ssecret().size() > 0) {

    ssecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssecret_);
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  stoken_.Swap(&other->stoken_);
  ssecret_.Swap(&other->ssecret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRet::kNCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRet::LoginRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsLoginRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.LoginRet)
}
LoginRet::LoginRet(const LoginRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ncode_ = from.ncode_;
  // @@protoc_insertion_point(copy_constructor:netData.LoginRet)
}

void LoginRet::SharedCtor() {
  ncode_ = 0;
  _cached_size_ = 0;
}

LoginRet::~LoginRet() {
  // @@protoc_insertion_point(destructor:netData.LoginRet)
  SharedDtor();
}

void LoginRet::SharedDtor() {
}

void LoginRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRet& LoginRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsLoginRet();
  return *internal_default_instance();
}


void LoginRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.LoginRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ncode_ = 0;
  _internal_metadata_.Clear();
}

bool LoginRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.LoginRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.LoginRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.LoginRet)
  return false;
#undef DO_
}

void LoginRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.LoginRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.LoginRet)
}

::google::protobuf::uint8* LoginRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.LoginRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.LoginRet)
  return target;
}

size_t LoginRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.LoginRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.LoginRet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.LoginRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.LoginRet)
    MergeFrom(*source);
  }
}

void LoginRet::MergeFrom(const LoginRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.LoginRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
}

void LoginRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.LoginRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRet::CopyFrom(const LoginRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.LoginRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRet::IsInitialized() const {
  return true;
}

void LoginRet::Swap(LoginRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRet::InternalSwap(LoginRet* other) {
  using std::swap;
  swap(ncode_, other->ncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLite::kGuidFieldNumber;
const int PlayerLite::kSNameFieldNumber;
const int PlayerLite::kNJobFieldNumber;
const int PlayerLite::kNSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLite::PlayerLite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsPlayerLite();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.PlayerLite)
}
PlayerLite::PlayerLite(const PlayerLite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsex_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(nsex_));
  // @@protoc_insertion_point(copy_constructor:netData.PlayerLite)
}

void PlayerLite::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsex_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nsex_));
  _cached_size_ = 0;
}

PlayerLite::~PlayerLite() {
  // @@protoc_insertion_point(destructor:netData.PlayerLite)
  SharedDtor();
}

void PlayerLite::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLite::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLite& PlayerLite::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsPlayerLite();
  return *internal_default_instance();
}


void PlayerLite::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.PlayerLite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsex_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nsex_));
  _internal_metadata_.Clear();
}

bool PlayerLite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.PlayerLite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), static_cast<int>(this->sname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.PlayerLite.sName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nJob = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &njob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.PlayerLite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.PlayerLite)
  return false;
#undef DO_
}

void PlayerLite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.PlayerLite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // string sName = 2;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.PlayerLite.sName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sname(), output);
  }

  // int32 nJob = 3;
  if (this->njob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->njob(), output);
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nsex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.PlayerLite)
}

::google::protobuf::uint8* PlayerLite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.PlayerLite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // string sName = 2;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.PlayerLite.sName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sname(), target);
  }

  // int32 nJob = 3;
  if (this->njob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->njob(), target);
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nsex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.PlayerLite)
  return target;
}

size_t PlayerLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.PlayerLite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sName = 2;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 nJob = 3;
  if (this->njob() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->njob());
  }

  // int32 nSex = 4;
  if (this->nsex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.PlayerLite)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.PlayerLite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.PlayerLite)
    MergeFrom(*source);
  }
}

void PlayerLite::MergeFrom(const PlayerLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.PlayerLite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.njob() != 0) {
    set_njob(from.njob());
  }
  if (from.nsex() != 0) {
    set_nsex(from.nsex());
  }
}

void PlayerLite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.PlayerLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLite::CopyFrom(const PlayerLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.PlayerLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLite::IsInitialized() const {
  return true;
}

void PlayerLite::Swap(PlayerLite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLite::InternalSwap(PlayerLite* other) {
  using std::swap;
  sname_.Swap(&other->sname_);
  swap(guid_, other->guid_);
  swap(njob_, other->njob_);
  swap(nsex_, other->nsex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLite::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerList::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerList::PlayerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsPlayerList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.PlayerList)
}
PlayerList::PlayerList(const PlayerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:netData.PlayerList)
}

void PlayerList::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PlayerList::~PlayerList() {
  // @@protoc_insertion_point(destructor:netData.PlayerList)
  SharedDtor();
}

void PlayerList::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerList::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerList& PlayerList::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsPlayerList();
  return *internal_default_instance();
}


void PlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.PlayerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.PlayerList.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.PlayerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.PlayerList)
  return false;
#undef DO_
}

void PlayerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.PlayerList.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.PlayerList)
}

::google::protobuf::uint8* PlayerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.PlayerList.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.PlayerList)
  return target;
}

size_t PlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.PlayerList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.PlayerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.PlayerList)
    MergeFrom(*source);
  }
}

void PlayerList::MergeFrom(const PlayerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void PlayerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerList::CopyFrom(const PlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerList::IsInitialized() const {
  return true;
}

void PlayerList::Swap(PlayerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerList::InternalSwap(PlayerList* other) {
  using std::swap;
  account_.Swap(&other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerList::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerListRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerListRet::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerListRet::PlayerListRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsPlayerListRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.PlayerListRet)
}
PlayerListRet::PlayerListRet(const PlayerListRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:netData.PlayerListRet)
}

void PlayerListRet::SharedCtor() {
  _cached_size_ = 0;
}

PlayerListRet::~PlayerListRet() {
  // @@protoc_insertion_point(destructor:netData.PlayerListRet)
  SharedDtor();
}

void PlayerListRet::SharedDtor() {
}

void PlayerListRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerListRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerListRet& PlayerListRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsPlayerListRet();
  return *internal_default_instance();
}


void PlayerListRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.PlayerListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerListRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.PlayerListRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .netData.PlayerLite list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.PlayerListRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.PlayerListRet)
  return false;
#undef DO_
}

void PlayerListRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.PlayerListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .netData.PlayerLite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.PlayerListRet)
}

::google::protobuf::uint8* PlayerListRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.PlayerListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .netData.PlayerLite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.PlayerListRet)
  return target;
}

size_t PlayerListRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.PlayerListRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .netData.PlayerLite list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerListRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.PlayerListRet)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerListRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerListRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.PlayerListRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.PlayerListRet)
    MergeFrom(*source);
  }
}

void PlayerListRet::MergeFrom(const PlayerListRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.PlayerListRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void PlayerListRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.PlayerListRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerListRet::CopyFrom(const PlayerListRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.PlayerListRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerListRet::IsInitialized() const {
  return true;
}

void PlayerListRet::Swap(PlayerListRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerListRet::InternalSwap(PlayerListRet* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerListRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatePlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePlayer::kSNameFieldNumber;
const int CreatePlayer::kNJobFieldNumber;
const int CreatePlayer::kNSexFieldNumber;
const int CreatePlayer::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePlayer::CreatePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsCreatePlayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.CreatePlayer)
}
CreatePlayer::CreatePlayer(const CreatePlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&njob_, &from.njob_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsex_) -
    reinterpret_cast<char*>(&njob_)) + sizeof(nsex_));
  // @@protoc_insertion_point(copy_constructor:netData.CreatePlayer)
}

void CreatePlayer::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&njob_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsex_) -
      reinterpret_cast<char*>(&njob_)) + sizeof(nsex_));
  _cached_size_ = 0;
}

CreatePlayer::~CreatePlayer() {
  // @@protoc_insertion_point(destructor:netData.CreatePlayer)
  SharedDtor();
}

void CreatePlayer::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreatePlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlayer::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePlayer& CreatePlayer::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsCreatePlayer();
  return *internal_default_instance();
}


void CreatePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.CreatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&njob_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsex_) -
      reinterpret_cast<char*>(&njob_)) + sizeof(nsex_));
  _internal_metadata_.Clear();
}

bool CreatePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.CreatePlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), static_cast<int>(this->sname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.CreatePlayer.sName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nJob = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &njob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netData.CreatePlayer.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.CreatePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.CreatePlayer)
  return false;
#undef DO_
}

void CreatePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.CreatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sName = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.CreatePlayer.sName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sname(), output);
  }

  // int32 nJob = 2;
  if (this->njob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->njob(), output);
  }

  // int32 nSex = 3;
  if (this->nsex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nsex(), output);
  }

  // string account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.CreatePlayer.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.CreatePlayer)
}

::google::protobuf::uint8* CreatePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.CreatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sName = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.CreatePlayer.sName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sname(), target);
  }

  // int32 nJob = 2;
  if (this->njob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->njob(), target);
  }

  // int32 nSex = 3;
  if (this->nsex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nsex(), target);
  }

  // string account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netData.CreatePlayer.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.CreatePlayer)
  return target;
}

size_t CreatePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.CreatePlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sName = 1;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // string account = 4;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // int32 nJob = 2;
  if (this->njob() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->njob());
  }

  // int32 nSex = 3;
  if (this->nsex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.CreatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.CreatePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.CreatePlayer)
    MergeFrom(*source);
  }
}

void CreatePlayer::MergeFrom(const CreatePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.CreatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.njob() != 0) {
    set_njob(from.njob());
  }
  if (from.nsex() != 0) {
    set_nsex(from.nsex());
  }
}

void CreatePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.CreatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlayer::CopyFrom(const CreatePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.CreatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePlayer::IsInitialized() const {
  return true;
}

void CreatePlayer::Swap(CreatePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePlayer::InternalSwap(CreatePlayer* other) {
  using std::swap;
  sname_.Swap(&other->sname_);
  account_.Swap(&other->account_);
  swap(njob_, other->njob_);
  swap(nsex_, other->nsex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePlayer::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatePlayerRet::InitAsDefaultInstance() {
  ::netData::_CreatePlayerRet_default_instance_._instance.get_mutable()->info_ = const_cast< ::netData::PlayerLite*>(
      ::netData::PlayerLite::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePlayerRet::kNCodeFieldNumber;
const int CreatePlayerRet::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePlayerRet::CreatePlayerRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsCreatePlayerRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.CreatePlayerRet)
}
CreatePlayerRet::CreatePlayerRet(const CreatePlayerRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::netData::PlayerLite(*from.info_);
  } else {
    info_ = NULL;
  }
  ncode_ = from.ncode_;
  // @@protoc_insertion_point(copy_constructor:netData.CreatePlayerRet)
}

void CreatePlayerRet::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncode_) -
      reinterpret_cast<char*>(&info_)) + sizeof(ncode_));
  _cached_size_ = 0;
}

CreatePlayerRet::~CreatePlayerRet() {
  // @@protoc_insertion_point(destructor:netData.CreatePlayerRet)
  SharedDtor();
}

void CreatePlayerRet::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void CreatePlayerRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlayerRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePlayerRet& CreatePlayerRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsCreatePlayerRet();
  return *internal_default_instance();
}


void CreatePlayerRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.CreatePlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ncode_ = 0;
  _internal_metadata_.Clear();
}

bool CreatePlayerRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.CreatePlayerRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netData.PlayerLite info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.CreatePlayerRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.CreatePlayerRet)
  return false;
#undef DO_
}

void CreatePlayerRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.CreatePlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  // .netData.PlayerLite info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.CreatePlayerRet)
}

::google::protobuf::uint8* CreatePlayerRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.CreatePlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  // .netData.PlayerLite info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.CreatePlayerRet)
  return target;
}

size_t CreatePlayerRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.CreatePlayerRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .netData.PlayerLite info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlayerRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.CreatePlayerRet)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePlayerRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePlayerRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.CreatePlayerRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.CreatePlayerRet)
    MergeFrom(*source);
  }
}

void CreatePlayerRet::MergeFrom(const CreatePlayerRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.CreatePlayerRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::netData::PlayerLite::MergeFrom(from.info());
  }
  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
}

void CreatePlayerRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.CreatePlayerRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlayerRet::CopyFrom(const CreatePlayerRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.CreatePlayerRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePlayerRet::IsInitialized() const {
  return true;
}

void CreatePlayerRet::Swap(CreatePlayerRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePlayerRet::InternalSwap(CreatePlayerRet* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(ncode_, other->ncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePlayerRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectPlayer::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectPlayer::SelectPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsSelectPlayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.SelectPlayer)
}
SelectPlayer::SelectPlayer(const SelectPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:netData.SelectPlayer)
}

void SelectPlayer::SharedCtor() {
  guid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SelectPlayer::~SelectPlayer() {
  // @@protoc_insertion_point(destructor:netData.SelectPlayer)
  SharedDtor();
}

void SelectPlayer::SharedDtor() {
}

void SelectPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectPlayer::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectPlayer& SelectPlayer::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsSelectPlayer();
  return *internal_default_instance();
}


void SelectPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.SelectPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SelectPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.SelectPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.SelectPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.SelectPlayer)
  return false;
#undef DO_
}

void SelectPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.SelectPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.SelectPlayer)
}

::google::protobuf::uint8* SelectPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.SelectPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.SelectPlayer)
  return target;
}

size_t SelectPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.SelectPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.SelectPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.SelectPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.SelectPlayer)
    MergeFrom(*source);
  }
}

void SelectPlayer::MergeFrom(const SelectPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.SelectPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void SelectPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.SelectPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectPlayer::CopyFrom(const SelectPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.SelectPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectPlayer::IsInitialized() const {
  return true;
}

void SelectPlayer::Swap(SelectPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectPlayer::InternalSwap(SelectPlayer* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectPlayer::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectPlayerRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectPlayerRet::kNCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectPlayerRet::SelectPlayerRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Login_2eproto::InitDefaultsSelectPlayerRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:netData.SelectPlayerRet)
}
SelectPlayerRet::SelectPlayerRet(const SelectPlayerRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ncode_ = from.ncode_;
  // @@protoc_insertion_point(copy_constructor:netData.SelectPlayerRet)
}

void SelectPlayerRet::SharedCtor() {
  ncode_ = 0;
  _cached_size_ = 0;
}

SelectPlayerRet::~SelectPlayerRet() {
  // @@protoc_insertion_point(destructor:netData.SelectPlayerRet)
  SharedDtor();
}

void SelectPlayerRet::SharedDtor() {
}

void SelectPlayerRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectPlayerRet::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectPlayerRet& SelectPlayerRet::default_instance() {
  ::protobuf_Login_2eproto::InitDefaultsSelectPlayerRet();
  return *internal_default_instance();
}


void SelectPlayerRet::Clear() {
// @@protoc_insertion_point(message_clear_start:netData.SelectPlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ncode_ = 0;
  _internal_metadata_.Clear();
}

bool SelectPlayerRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netData.SelectPlayerRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netData.SelectPlayerRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netData.SelectPlayerRet)
  return false;
#undef DO_
}

void SelectPlayerRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netData.SelectPlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netData.SelectPlayerRet)
}

::google::protobuf::uint8* SelectPlayerRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netData.SelectPlayerRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nCode = 1;
  if (this->ncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netData.SelectPlayerRet)
  return target;
}

size_t SelectPlayerRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netData.SelectPlayerRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nCode = 1;
  if (this->ncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectPlayerRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netData.SelectPlayerRet)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectPlayerRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectPlayerRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netData.SelectPlayerRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netData.SelectPlayerRet)
    MergeFrom(*source);
  }
}

void SelectPlayerRet::MergeFrom(const SelectPlayerRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netData.SelectPlayerRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ncode() != 0) {
    set_ncode(from.ncode());
  }
}

void SelectPlayerRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netData.SelectPlayerRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectPlayerRet::CopyFrom(const SelectPlayerRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netData.SelectPlayerRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectPlayerRet::IsInitialized() const {
  return true;
}

void SelectPlayerRet::Swap(SelectPlayerRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectPlayerRet::InternalSwap(SelectPlayerRet* other) {
  using std::swap;
  swap(ncode_, other->ncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectPlayerRet::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace netData
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::HandShake* Arena::Create< ::netData::HandShake >(Arena* arena) {
  return Arena::CreateInternal< ::netData::HandShake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::HandShakeRet* Arena::Create< ::netData::HandShakeRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::HandShakeRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::Challenge* Arena::Create< ::netData::Challenge >(Arena* arena) {
  return Arena::CreateInternal< ::netData::Challenge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::ChallengeRet* Arena::Create< ::netData::ChallengeRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::ChallengeRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::Auth* Arena::Create< ::netData::Auth >(Arena* arena) {
  return Arena::CreateInternal< ::netData::Auth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::AuthRet* Arena::Create< ::netData::AuthRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::AuthRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::Login* Arena::Create< ::netData::Login >(Arena* arena) {
  return Arena::CreateInternal< ::netData::Login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::LoginRet* Arena::Create< ::netData::LoginRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::LoginRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::PlayerLite* Arena::Create< ::netData::PlayerLite >(Arena* arena) {
  return Arena::CreateInternal< ::netData::PlayerLite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::PlayerList* Arena::Create< ::netData::PlayerList >(Arena* arena) {
  return Arena::CreateInternal< ::netData::PlayerList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::PlayerListRet* Arena::Create< ::netData::PlayerListRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::PlayerListRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::CreatePlayer* Arena::Create< ::netData::CreatePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::netData::CreatePlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::CreatePlayerRet* Arena::Create< ::netData::CreatePlayerRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::CreatePlayerRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::SelectPlayer* Arena::Create< ::netData::SelectPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::netData::SelectPlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netData::SelectPlayerRet* Arena::Create< ::netData::SelectPlayerRet >(Arena* arena) {
  return Arena::CreateInternal< ::netData::SelectPlayerRet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
