syntax = "proto3";
package netData;

// 2-1 握手
message HandShake
{
	bytes sClientKey = 1;		//base64encode(randomkey)
}

// 2-2 握手返回
message HandShakeRet
{
	bytes sChallenge = 1;		//base64encode(randomkey)
	bytes sServerKey = 2;		//base64encode(dhexchange(randomkey))
}

// 收到1-2之后
// 使用 nServerKey 和 nClientKey 计算出 secret
// 使用 secret 加密 nChallenge
// secret = dhsecret(nClientKey,nServerKey)

// 2-3 挑战握手
message Challenge
{
	string sHmac = 1;		//base64encode(hmac64(nChallenge,secret))
}

// 2-4 挑战握手返回
message ChallengeRet
{
	enum EC
	{
		EC_OTHER = 0;
		EC_SUCC = 1;
		EC_FAIL = 2;
	};
	int32 nCode = 1;	//握手结果
}

// 2-5 认证(账号密码)
message Auth
{
	//token:base64encode(账号)@base64encode(要登陆的服务器ID)@base64encode(密码)
	string sEtoken = 1;	//base64encode(desencode(secret,token))
	string sSecret = 2; //client不用填写
}

// 2-6 认证返回
message AuthRet
{
	enum EC
	{
		EC_OTHER = 0;
		EC_SUCC = 1;
		EC_FAIL = 2;
		EC_HANDSHAKE = 3;	// 握手失败
		EC_SERVER = 4;		// 分配Server失败
		EC_DB = 5;			// 数据库查询失败
		EC_AUTHINFO = 6;	// 没有找到认证信息
	};
	int32 nCode = 1;
	int32 nServerID = 2;	// 返回要连接的服务器ID
	string ip = 3;			// 返回要去连接的ip地址
	int32 port = 4;			// 返回要去连接的port
}

// 2-7 登陆
message Login
{
	// handshake = base64encode(token.user)@base64encode(token.server)#base64encode(subid):index)
	// hmac = hmac64(hashkey(handshake), secret)
	string sToken = 1;	// handshake:base64encode(hmac)
}

// 2-8 登录返回
message LoginRet
{
	enum EC
	{
		EC_OTHER = 0;
		EC_SUCC = 1;
		EC_FAIL = 2;
	};
	int32 nCode = 1;
}

message PlayerLite
{
	int64 uuid = 1;
	string sName = 2;
	int32 nJob = 3;
	int32 nSex = 4;
}

// 2-9 请求角色列表
message PlayerList
{
	// 空消息
	string account = 1;	//请求不用填写
}

// 2-10 返回角色列表
message PlayerListRet
{
	repeated PlayerLite list = 1;
}

// 2-11 请求创建角色
message CreatePlayer
{
	string sName = 1;
	int32 nJob = 2;
	int32 nSex = 3;
	string account = 4;//请求不用填写
}

// 2-12 创建角色返回
message CreatePlayerRet
{
	enum EC
	{
		EC_OTHER = 0;
		EC_SUCC = 1;
		EC_FAIL = 2;
	};
	int32 nCode = 1;
	PlayerLite info = 2;
}

// 2-13 请求选择角色
message SelectPlayer
{
	int64 uuid = 1;
}

// 2-14 选择角色返回
message SelectPlayerRet
{
	enum EC
	{
		EC_OTHER = 0;
		EC_SUCC = 1;
		EC_FAIL = 2;
	};
	int32 nCode = 1;
}
