// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMsg.proto

#include "ServerMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace svrData {
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class ServerRegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegister>
      _instance;
} _ServerRegister_default_instance_;
class ServerRegisterRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterRet>
      _instance;
} _ServerRegisterRet_default_instance_;
class AddNewClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNewClient>
      _instance;
} _AddNewClient_default_instance_;
}  // namespace svrData
namespace protobuf_ServerMsg_2eproto {
void InitDefaultsPingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_Ping_default_instance_;
    new (ptr) ::svrData::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::Ping::InitAsDefaultInstance();
}

void InitDefaultsPing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPingImpl);
}

void InitDefaultsServerRegisterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegister_default_instance_;
    new (ptr) ::svrData::ServerRegister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegister::InitAsDefaultInstance();
}

void InitDefaultsServerRegister() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterImpl);
}

void InitDefaultsServerRegisterRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_ServerRegisterRet_default_instance_;
    new (ptr) ::svrData::ServerRegisterRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::ServerRegisterRet::InitAsDefaultInstance();
}

void InitDefaultsServerRegisterRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerRegisterRetImpl);
}

void InitDefaultsAddNewClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::svrData::_AddNewClient_default_instance_;
    new (ptr) ::svrData::AddNewClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::svrData::AddNewClient::InitAsDefaultInstance();
}

void InitDefaultsAddNewClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddNewClientImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nservertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegister, nconnectid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::ServerRegisterRet, nretcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::svrData::AddNewClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::svrData::Ping)},
  { 5, -1, sizeof(::svrData::ServerRegister)},
  { 13, -1, sizeof(::svrData::ServerRegisterRet)},
  { 19, -1, sizeof(::svrData::AddNewClient)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_ServerRegisterRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::svrData::_AddNewClient_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ServerMsg.proto\022\007svrData\"\006\n\004Ping\"L\n\016Se"
      "rverRegister\022\021\n\tnServerID\030\001 \001(\005\022\023\n\013nServ"
      "erType\030\002 \001(\005\022\022\n\nnConnectID\030\003 \001(\005\"~\n\021Serv"
      "erRegisterRet\022\020\n\010nRetCode\030\001 \001(\005\"W\n\002EC\022\014\n"
      "\010EC_OTHER\020\000\022\013\n\007EC_SUCC\020\001\022\026\n\022EC_SERVER_ID"
      "_EXIST\020\002\022\036\n\032EC_TO_CONNECT_ID_NOT_EQUAL\020\003"
      "\"\016\n\014AddNewClientb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMsg_2eproto
namespace svrData {
const ::google::protobuf::EnumDescriptor* ServerRegisterRet_EC_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[0];
}
bool ServerRegisterRet_EC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerRegisterRet_EC ServerRegisterRet::EC_OTHER;
const ServerRegisterRet_EC ServerRegisterRet::EC_SUCC;
const ServerRegisterRet_EC ServerRegisterRet::EC_SERVER_ID_EXIST;
const ServerRegisterRet_EC ServerRegisterRet::EC_TO_CONNECT_ID_NOT_EQUAL;
const ServerRegisterRet_EC ServerRegisterRet::EC_MIN;
const ServerRegisterRet_EC ServerRegisterRet::EC_MAX;
const int ServerRegisterRet::EC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.Ping)
}

void Ping::SharedCtor() {
  _cached_size_ = 0;
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:svrData.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsPing();
  return *internal_default_instance();
}

Ping* Ping::New(::google::protobuf::Arena* arena) const {
  Ping* n = new Ping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegister::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegister::kNServerIDFieldNumber;
const int ServerRegister::kNServerTypeFieldNumber;
const int ServerRegister::kNConnectIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegister::ServerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegister)
}
ServerRegister::ServerRegister(const ServerRegister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nserverid_, &from.nserverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nconnectid_) -
    reinterpret_cast<char*>(&nserverid_)) + sizeof(nconnectid_));
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegister)
}

void ServerRegister::SharedCtor() {
  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nconnectid_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nconnectid_));
  _cached_size_ = 0;
}

ServerRegister::~ServerRegister() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegister)
  SharedDtor();
}

void ServerRegister::SharedDtor() {
}

void ServerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegister::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegister& ServerRegister::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegister();
  return *internal_default_instance();
}

ServerRegister* ServerRegister::New(::google::protobuf::Arena* arena) const {
  ServerRegister* n = new ServerRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nserverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nconnectid_) -
      reinterpret_cast<char*>(&nserverid_)) + sizeof(nconnectid_));
  _internal_metadata_.Clear();
}

bool ServerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nServerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nservertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nConnectID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconnectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegister)
  return false;
#undef DO_
}

void ServerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nserverid(), output);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nservertype(), output);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nconnectid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegister)
}

::google::protobuf::uint8* ServerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nserverid(), target);
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nservertype(), target);
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nconnectid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegister)
  return target;
}

size_t ServerRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegister)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nServerID = 1;
  if (this->nserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nserverid());
  }

  // int32 nServerType = 2;
  if (this->nservertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nservertype());
  }

  // int32 nConnectID = 3;
  if (this->nconnectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nconnectid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegister* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegister)
    MergeFrom(*source);
  }
}

void ServerRegister::MergeFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nserverid() != 0) {
    set_nserverid(from.nserverid());
  }
  if (from.nservertype() != 0) {
    set_nservertype(from.nservertype());
  }
  if (from.nconnectid() != 0) {
    set_nconnectid(from.nconnectid());
  }
}

void ServerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegister::CopyFrom(const ServerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegister::IsInitialized() const {
  return true;
}

void ServerRegister::Swap(ServerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegister::InternalSwap(ServerRegister* other) {
  using std::swap;
  swap(nserverid_, other->nserverid_);
  swap(nservertype_, other->nservertype_);
  swap(nconnectid_, other->nconnectid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegister::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegisterRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterRet::kNRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterRet::ServerRegisterRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.ServerRegisterRet)
}
ServerRegisterRet::ServerRegisterRet(const ServerRegisterRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nretcode_ = from.nretcode_;
  // @@protoc_insertion_point(copy_constructor:svrData.ServerRegisterRet)
}

void ServerRegisterRet::SharedCtor() {
  nretcode_ = 0;
  _cached_size_ = 0;
}

ServerRegisterRet::~ServerRegisterRet() {
  // @@protoc_insertion_point(destructor:svrData.ServerRegisterRet)
  SharedDtor();
}

void ServerRegisterRet::SharedDtor() {
}

void ServerRegisterRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegisterRet::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegisterRet& ServerRegisterRet::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsServerRegisterRet();
  return *internal_default_instance();
}

ServerRegisterRet* ServerRegisterRet::New(::google::protobuf::Arena* arena) const {
  ServerRegisterRet* n = new ServerRegisterRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRegisterRet::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nretcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerRegisterRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.ServerRegisterRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nRetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nretcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.ServerRegisterRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.ServerRegisterRet)
  return false;
#undef DO_
}

void ServerRegisterRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nretcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.ServerRegisterRet)
}

::google::protobuf::uint8* ServerRegisterRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.ServerRegisterRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nretcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.ServerRegisterRet)
  return target;
}

size_t ServerRegisterRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.ServerRegisterRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nRetCode = 1;
  if (this->nretcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nretcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegisterRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegisterRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.ServerRegisterRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.ServerRegisterRet)
    MergeFrom(*source);
  }
}

void ServerRegisterRet::MergeFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.ServerRegisterRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nretcode() != 0) {
    set_nretcode(from.nretcode());
  }
}

void ServerRegisterRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterRet::CopyFrom(const ServerRegisterRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.ServerRegisterRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterRet::IsInitialized() const {
  return true;
}

void ServerRegisterRet::Swap(ServerRegisterRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterRet::InternalSwap(ServerRegisterRet* other) {
  using std::swap;
  swap(nretcode_, other->nretcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRegisterRet::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNewClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNewClient::AddNewClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMsg_2eproto::InitDefaultsAddNewClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svrData.AddNewClient)
}
AddNewClient::AddNewClient(const AddNewClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svrData.AddNewClient)
}

void AddNewClient::SharedCtor() {
  _cached_size_ = 0;
}

AddNewClient::~AddNewClient() {
  // @@protoc_insertion_point(destructor:svrData.AddNewClient)
  SharedDtor();
}

void AddNewClient::SharedDtor() {
}

void AddNewClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNewClient::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNewClient& AddNewClient::default_instance() {
  ::protobuf_ServerMsg_2eproto::InitDefaultsAddNewClient();
  return *internal_default_instance();
}

AddNewClient* AddNewClient::New(::google::protobuf::Arena* arena) const {
  AddNewClient* n = new AddNewClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddNewClient::Clear() {
// @@protoc_insertion_point(message_clear_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AddNewClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svrData.AddNewClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:svrData.AddNewClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svrData.AddNewClient)
  return false;
#undef DO_
}

void AddNewClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:svrData.AddNewClient)
}

::google::protobuf::uint8* AddNewClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svrData.AddNewClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:svrData.AddNewClient)
  return target;
}

size_t AddNewClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svrData.AddNewClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNewClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svrData.AddNewClient)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNewClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svrData.AddNewClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svrData.AddNewClient)
    MergeFrom(*source);
  }
}

void AddNewClient::MergeFrom(const AddNewClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svrData.AddNewClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddNewClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svrData.AddNewClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewClient::CopyFrom(const AddNewClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svrData.AddNewClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewClient::IsInitialized() const {
  return true;
}

void AddNewClient::Swap(AddNewClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNewClient::InternalSwap(AddNewClient* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNewClient::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace svrData

// @@protoc_insertion_point(global_scope)
